# -*- coding: utf-8 -*-
# Symbolic Functions for N = 5 (General Symm. Stochastic)
# Generated by script

import math
import numpy as np


# --------------------------------------------------------------------------
# Value Function (S1_n5)
# Input: x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3, x_1_4, x_2_0, x_2_1,
# x_2_3, x_2_4, x_3_0, x_3_1, x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
# --------------------------------------------------------------------------
def calculate_S1_n5(x_vec):
    """Calculates S_1 for n=5 general symm. stochastic matrix.
    Args:
        x_vec (numpy array or list/tuple): Input vector of length 20
           containing the strict upper triangle elements in row-wise order:
                      x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3,
           x_1_4, x_2_0, x_2_1, x_2_3, x_2_4, x_3_0, x_3_1,
           x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
           Diagonal elements are determined by stochastic constraint.
    
    Returns: float: S_1 value.
    """
    # Assign vars
    x_0_1 = x_vec[0]
    x_0_2 = x_vec[1]
    x_0_3 = x_vec[2]
    x_0_4 = x_vec[3]
    x_1_0 = x_vec[4]
    x_1_2 = x_vec[5]
    x_1_3 = x_vec[6]
    x_1_4 = x_vec[7]
    x_2_0 = x_vec[8]
    x_2_1 = x_vec[9]
    x_2_3 = x_vec[10]
    x_2_4 = x_vec[11]
    x_3_0 = x_vec[12]
    x_3_1 = x_vec[13]
    x_3_2 = x_vec[14]
    x_3_4 = x_vec[15]
    x_4_0 = x_vec[16]
    x_4_1 = x_vec[17]
    x_4_2 = x_vec[18]
    x_4_3 = x_vec[19]
    # S_k CSE Defs

    # Final S_k Calculation
    result = -x_0_1 - x_0_2 - x_0_3 - x_0_4 - x_1_0 - x_1_2 - x_1_3 - x_1_4 - x_2_0 - x_2_1 - x_2_3 - x_2_4 - x_3_0 - x_3_1 - x_3_2 - x_3_4 - x_4_0 - x_4_1 - x_4_2 - x_4_3 + 5
    return result



# --------------------------------------------------------------------------
# Jacobian Function (S1_n5)
# Input: x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3, x_1_4, x_2_0, x_2_1,
# x_2_3, x_2_4, x_3_0, x_3_1, x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
# --------------------------------------------------------------------------
def calculate_S1_n5_jacobian(x_vec):
    """Calculates Jacobian of S_1 (n=5).
    Args:
        x_vec (numpy array or list/tuple): Input vector of length 20
           containing the strict upper triangle elements in row-wise order:
                      x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3,
           x_1_4, x_2_0, x_2_1, x_2_3, x_2_4, x_3_0, x_3_1,
           x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
           Diagonal elements are determined by stochastic constraint.
    
    Returns: list: Gradient vector.
    """
    # Assign vars
    x_0_1 = x_vec[0]
    x_0_2 = x_vec[1]
    x_0_3 = x_vec[2]
    x_0_4 = x_vec[3]
    x_1_0 = x_vec[4]
    x_1_2 = x_vec[5]
    x_1_3 = x_vec[6]
    x_1_4 = x_vec[7]
    x_2_0 = x_vec[8]
    x_2_1 = x_vec[9]
    x_2_3 = x_vec[10]
    x_2_4 = x_vec[11]
    x_3_0 = x_vec[12]
    x_3_1 = x_vec[13]
    x_3_2 = x_vec[14]
    x_3_4 = x_vec[15]
    x_4_0 = x_vec[16]
    x_4_1 = x_vec[17]
    x_4_2 = x_vec[18]
    x_4_3 = x_vec[19]
    # Jacobian CSE Defs

    # Final Gradient Calculation
    gradient = [
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1,
        -1
    ]
    return gradient



# --------------------------------------------------------------------------
# Value Function (S2_n5)
# Input: x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3, x_1_4, x_2_0, x_2_1,
# x_2_3, x_2_4, x_3_0, x_3_1, x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
# --------------------------------------------------------------------------
def calculate_S2_n5(x_vec):
    """Calculates S_2 for n=5 general symm. stochastic matrix.
    Args:
        x_vec (numpy array or list/tuple): Input vector of length 20
           containing the strict upper triangle elements in row-wise order:
                      x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3,
           x_1_4, x_2_0, x_2_1, x_2_3, x_2_4, x_3_0, x_3_1,
           x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
           Diagonal elements are determined by stochastic constraint.
    
    Returns: float: S_2 value.
    """
    # Assign vars
    x_0_1 = x_vec[0]
    x_0_2 = x_vec[1]
    x_0_3 = x_vec[2]
    x_0_4 = x_vec[3]
    x_1_0 = x_vec[4]
    x_1_2 = x_vec[5]
    x_1_3 = x_vec[6]
    x_1_4 = x_vec[7]
    x_2_0 = x_vec[8]
    x_2_1 = x_vec[9]
    x_2_3 = x_vec[10]
    x_2_4 = x_vec[11]
    x_3_0 = x_vec[12]
    x_3_1 = x_vec[13]
    x_3_2 = x_vec[14]
    x_3_4 = x_vec[15]
    x_4_0 = x_vec[16]
    x_4_1 = x_vec[17]
    x_4_2 = x_vec[18]
    x_4_3 = x_vec[19]
    # S_k CSE Defs

    # Final S_k Calculation
    result = x_0_1*x_1_2 + x_0_1*x_1_3 + x_0_1*x_1_4 + x_0_1*x_2_0 + x_0_1*x_2_1 + x_0_1*x_2_3 + x_0_1*x_2_4 + x_0_1*x_3_0 + x_0_1*x_3_1 + x_0_1*x_3_2 + x_0_1*x_3_4 + x_0_1*x_4_0 + x_0_1*x_4_1 + x_0_1*x_4_2 + x_0_1*x_4_3 - 4*x_0_1 + x_0_2*x_1_0 + x_0_2*x_1_2 + x_0_2*x_1_3 + x_0_2*x_1_4 + x_0_2*x_2_1 + x_0_2*x_2_3 + x_0_2*x_2_4 + x_0_2*x_3_0 + x_0_2*x_3_1 + x_0_2*x_3_2 + x_0_2*x_3_4 + x_0_2*x_4_0 + x_0_2*x_4_1 + x_0_2*x_4_2 + x_0_2*x_4_3 - 4*x_0_2 + x_0_3*x_1_0 + x_0_3*x_1_2 + x_0_3*x_1_3 + x_0_3*x_1_4 + x_0_3*x_2_0 + x_0_3*x_2_1 + x_0_3*x_2_3 + x_0_3*x_2_4 + x_0_3*x_3_1 + x_0_3*x_3_2 + x_0_3*x_3_4 + x_0_3*x_4_0 + x_0_3*x_4_1 + x_0_3*x_4_2 + x_0_3*x_4_3 - 4*x_0_3 + x_0_4*x_1_0 + x_0_4*x_1_2 + x_0_4*x_1_3 + x_0_4*x_1_4 + x_0_4*x_2_0 + x_0_4*x_2_1 + x_0_4*x_2_3 + x_0_4*x_2_4 + x_0_4*x_3_0 + x_0_4*x_3_1 + x_0_4*x_3_2 + x_0_4*x_3_4 + x_0_4*x_4_1 + x_0_4*x_4_2 + x_0_4*x_4_3 - 4*x_0_4 + x_1_0*x_2_0 + x_1_0*x_2_1 + x_1_0*x_2_3 + x_1_0*x_2_4 + x_1_0*x_3_0 + x_1_0*x_3_1 + x_1_0*x_3_2 + x_1_0*x_3_4 + x_1_0*x_4_0 + x_1_0*x_4_1 + x_1_0*x_4_2 + x_1_0*x_4_3 - 4*x_1_0 + x_1_2*x_2_0 + x_1_2*x_2_3 + x_1_2*x_2_4 + x_1_2*x_3_0 + x_1_2*x_3_1 + x_1_2*x_3_2 + x_1_2*x_3_4 + x_1_2*x_4_0 + x_1_2*x_4_1 + x_1_2*x_4_2 + x_1_2*x_4_3 - 4*x_1_2 + x_1_3*x_2_0 + x_1_3*x_2_1 + x_1_3*x_2_3 + x_1_3*x_2_4 + x_1_3*x_3_0 + x_1_3*x_3_2 + x_1_3*x_3_4 + x_1_3*x_4_0 + x_1_3*x_4_1 + x_1_3*x_4_2 + x_1_3*x_4_3 - 4*x_1_3 + x_1_4*x_2_0 + x_1_4*x_2_1 + x_1_4*x_2_3 + x_1_4*x_2_4 + x_1_4*x_3_0 + x_1_4*x_3_1 + x_1_4*x_3_2 + x_1_4*x_3_4 + x_1_4*x_4_0 + x_1_4*x_4_2 + x_1_4*x_4_3 - 4*x_1_4 + x_2_0*x_3_0 + x_2_0*x_3_1 + x_2_0*x_3_2 + x_2_0*x_3_4 + x_2_0*x_4_0 + x_2_0*x_4_1 + x_2_0*x_4_2 + x_2_0*x_4_3 - 4*x_2_0 + x_2_1*x_3_0 + x_2_1*x_3_1 + x_2_1*x_3_2 + x_2_1*x_3_4 + x_2_1*x_4_0 + x_2_1*x_4_1 + x_2_1*x_4_2 + x_2_1*x_4_3 - 4*x_2_1 + x_2_3*x_3_0 + x_2_3*x_3_1 + x_2_3*x_3_4 + x_2_3*x_4_0 + x_2_3*x_4_1 + x_2_3*x_4_2 + x_2_3*x_4_3 - 4*x_2_3 + x_2_4*x_3_0 + x_2_4*x_3_1 + x_2_4*x_3_2 + x_2_4*x_3_4 + x_2_4*x_4_0 + x_2_4*x_4_1 + x_2_4*x_4_3 - 4*x_2_4 + x_3_0*x_4_0 + x_3_0*x_4_1 + x_3_0*x_4_2 + x_3_0*x_4_3 - 4*x_3_0 + x_3_1*x_4_0 + x_3_1*x_4_1 + x_3_1*x_4_2 + x_3_1*x_4_3 - 4*x_3_1 + x_3_2*x_4_0 + x_3_2*x_4_1 + x_3_2*x_4_2 + x_3_2*x_4_3 - 4*x_3_2 + x_3_4*x_4_0 + x_3_4*x_4_1 + x_3_4*x_4_2 - 4*x_3_4 - 4*x_4_0 - 4*x_4_1 - 4*x_4_2 - 4*x_4_3 + 10
    return result



# --------------------------------------------------------------------------
# Jacobian Function (S2_n5)
# Input: x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3, x_1_4, x_2_0, x_2_1,
# x_2_3, x_2_4, x_3_0, x_3_1, x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
# --------------------------------------------------------------------------
def calculate_S2_n5_jacobian(x_vec):
    """Calculates Jacobian of S_2 (n=5).
    Args:
        x_vec (numpy array or list/tuple): Input vector of length 20
           containing the strict upper triangle elements in row-wise order:
                      x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3,
           x_1_4, x_2_0, x_2_1, x_2_3, x_2_4, x_3_0, x_3_1,
           x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
           Diagonal elements are determined by stochastic constraint.
    
    Returns: list: Gradient vector.
    """
    # Assign vars
    x_0_1 = x_vec[0]
    x_0_2 = x_vec[1]
    x_0_3 = x_vec[2]
    x_0_4 = x_vec[3]
    x_1_0 = x_vec[4]
    x_1_2 = x_vec[5]
    x_1_3 = x_vec[6]
    x_1_4 = x_vec[7]
    x_2_0 = x_vec[8]
    x_2_1 = x_vec[9]
    x_2_3 = x_vec[10]
    x_2_4 = x_vec[11]
    x_3_0 = x_vec[12]
    x_3_1 = x_vec[13]
    x_3_2 = x_vec[14]
    x_3_4 = x_vec[15]
    x_4_0 = x_vec[16]
    x_4_1 = x_vec[17]
    x_4_2 = x_vec[18]
    x_4_3 = x_vec[19]
    # Jacobian CSE Defs
    x0 = x_1_3 + x_1_4 + x_3_0 + x_3_1 + x_3_2 + x_3_4 + x_4_0 + x_4_1 + x_4_2 + x_4_3 - 4
    x1 = x_1_2 + x_2_0 + x_2_1 + x_2_3 + x_2_4
    x2 = x_2_3 + x_2_4
    x3 = x2 + x_2_1
    x4 = x0 + x_1_0
    x5 = x4 + x_1_2
    x6 = x_3_2 + x_3_4 + x_4_0 + x_4_1 + x_4_2 + x_4_3 - 4
    x7 = x1 + x_1_0 + x_1_3 + x_3_1
    x8 = x7 + x_1_4
    x9 = x_4_1 + x_4_2 - 4
    x10 = x9 + x_4_3
    x11 = x_3_0 + x_3_2 + x_3_4
    x12 = x11 + x8
    x13 = x3 + x_2_0
    x14 = x_0_3 + x_0_4
    x15 = x14 + x_0_2
    x16 = x15 + x_3_1
    x17 = x16 + x_3_0
    x18 = x17 + x6
    x19 = x_0_1 + x_2_0
    x20 = x13 + x_0_1
    x21 = x15 + x_3_0
    x22 = x11 - 4
    x23 = x16 + x22
    x24 = x23 + x_4_0 + x_4_3
    x25 = x15 + x_0_1
    x26 = x10 + x_1_0 + x_1_4 + x_4_0
    x27 = x_1_2 + x_1_3
    x28 = x27 + x_0_1
    x29 = x_1_0 + x_1_4
    x30 = x1 + x26
    x31 = x_0_1 + x_0_2
    x32 = x19 + x27 + x_2_1
    # Final Gradient Calculation
    gradient = [
        x0 + x1,
        x3 + x5,
        x6 + x8,
        x10 + x12,
        x13 + x18,
        x18 + x19 + x2,
        x20 + x21 + x6,
        x20 + x24 + x_4_2,
        x14 + x5 + x_0_1,
        x25 + x4,
        x17 + x26 + x28 + x_3_4,
        x24 + x28 + x29 + x_4_1,
        x30 + x31 + x_0_4 + x_1_3,
        x25 + x30,
        x15 + x26 + x32 + x_2_4,
        x1 + x25 + x29 + x9 + x_1_3 + x_4_0,
        x12 + x31 + x_0_3 - 4,
        x22 + x25 + x7,
        x23 + x29 + x32 + x_2_3,
        x21 + x8 + x_0_1 + x_3_2 - 4
    ]
    return gradient



# --------------------------------------------------------------------------
# Value Function (S3_n5)
# Input: x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3, x_1_4, x_2_0, x_2_1,
# x_2_3, x_2_4, x_3_0, x_3_1, x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
# --------------------------------------------------------------------------
def calculate_S3_n5(x_vec):
    """Calculates S_3 for n=5 general symm. stochastic matrix.
    Args:
        x_vec (numpy array or list/tuple): Input vector of length 20
           containing the strict upper triangle elements in row-wise order:
                      x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3,
           x_1_4, x_2_0, x_2_1, x_2_3, x_2_4, x_3_0, x_3_1,
           x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
           Diagonal elements are determined by stochastic constraint.
    
    Returns: float: S_3 value.
    """
    # Assign vars
    x_0_1 = x_vec[0]
    x_0_2 = x_vec[1]
    x_0_3 = x_vec[2]
    x_0_4 = x_vec[3]
    x_1_0 = x_vec[4]
    x_1_2 = x_vec[5]
    x_1_3 = x_vec[6]
    x_1_4 = x_vec[7]
    x_2_0 = x_vec[8]
    x_2_1 = x_vec[9]
    x_2_3 = x_vec[10]
    x_2_4 = x_vec[11]
    x_3_0 = x_vec[12]
    x_3_1 = x_vec[13]
    x_3_2 = x_vec[14]
    x_3_4 = x_vec[15]
    x_4_0 = x_vec[16]
    x_4_1 = x_vec[17]
    x_4_2 = x_vec[18]
    x_4_3 = x_vec[19]
    # S_k CSE Defs
    x0 = x_0_1*x_1_2
    x1 = x_0_1*x_1_3
    x2 = x_0_1*x_1_4
    x3 = x_0_1*x_2_0
    x4 = x_0_1*x_2_1
    x5 = x_0_1*x_2_3
    x6 = x_0_1*x_2_4
    x7 = x_0_1*x_3_0
    x8 = x_0_1*x_3_1
    x9 = x_0_1*x_3_2
    x10 = x_0_1*x_3_4
    x11 = x_0_2*x_1_0
    x12 = x_0_2*x_1_2
    x13 = x_0_2*x_1_3
    x14 = x_0_2*x_1_4
    x15 = x_0_2*x_2_1
    x16 = x_0_2*x_2_3
    x17 = x_0_2*x_2_4
    x18 = x_0_2*x_3_0
    x19 = x_0_2*x_3_1
    x20 = x_0_2*x_3_2
    x21 = x_0_2*x_3_4
    x22 = x_0_3*x_1_0
    x23 = x_0_3*x_1_2
    x24 = x_0_3*x_1_3
    x25 = x_0_3*x_1_4
    x26 = x_0_3*x_2_0
    x27 = x_0_3*x_2_1
    x28 = x_0_3*x_2_3
    x29 = x_0_3*x_2_4
    x30 = x_0_3*x_3_1
    x31 = x_0_3*x_3_2
    x32 = x_0_3*x_3_4
    x33 = x_0_4*x_1_0
    x34 = x_0_4*x_1_2
    x35 = x_0_4*x_1_3
    x36 = x_0_4*x_1_4
    x37 = x_0_4*x_2_0
    x38 = x_0_4*x_2_1
    x39 = x_0_4*x_2_3
    x40 = x_0_4*x_2_4
    x41 = x_0_4*x_3_0
    x42 = x_0_4*x_3_1
    x43 = x_0_4*x_3_2
    x44 = x_0_4*x_3_4
    x45 = x_1_0*x_2_0
    x46 = x_1_0*x_2_1
    x47 = x_1_0*x_2_3
    x48 = x_1_0*x_2_4
    x49 = x_1_0*x_3_0
    x50 = x_1_0*x_3_1
    x51 = x_1_0*x_3_2
    x52 = x_1_0*x_3_4
    x53 = x_1_2*x_2_0
    x54 = x_1_2*x_2_3
    x55 = x_1_2*x_2_4
    x56 = x_1_2*x_3_0
    x57 = x_1_2*x_3_1
    x58 = x_1_2*x_3_2
    x59 = x_1_2*x_3_4
    x60 = x_1_3*x_2_0
    x61 = x_1_3*x_2_1
    x62 = x_1_3*x_2_3
    x63 = x_1_3*x_2_4
    x64 = x_1_3*x_3_0
    x65 = x_1_3*x_3_2
    x66 = x_1_3*x_3_4
    x67 = x_1_4*x_2_0
    x68 = x_1_4*x_2_1
    x69 = x_1_4*x_2_3
    x70 = x_1_4*x_2_4
    x71 = x_1_4*x_3_0
    x72 = x_1_4*x_3_1
    x73 = x_1_4*x_3_2
    x74 = x_1_4*x_3_4
    x75 = x_2_0*x_3_0
    x76 = x_2_0*x_3_1
    x77 = x_2_0*x_3_2
    x78 = x_2_0*x_3_4
    x79 = x_2_1*x_3_0
    x80 = x_2_1*x_3_1
    x81 = x_2_1*x_3_2
    x82 = x_2_1*x_3_4
    x83 = x_2_3*x_3_0
    x84 = x_2_3*x_3_1
    x85 = x_2_3*x_3_4
    x86 = x_2_4*x_3_0
    x87 = x_2_4*x_3_1
    x88 = x_2_4*x_3_2
    x89 = x_2_4*x_3_4
    # Final S_k Calculation
    result = -x0*x_2_3 - x0*x_2_4 - x0*x_3_0 - x0*x_3_1 - x0*x_3_2 - x0*x_3_4 - x0*x_4_0 - x0*x_4_1 - x0*x_4_2 - x0*x_4_3 - x1*x_2_0 - x1*x_2_1 - x1*x_2_3 - x1*x_2_4 - x1*x_3_2 - x1*x_3_4 - x1*x_4_0 - x1*x_4_1 - x1*x_4_2 - x1*x_4_3 - x10*x_4_0 - x10*x_4_1 - x10*x_4_2 - x11*x_2_3 - x11*x_2_4 - x11*x_3_0 - x11*x_3_1 - x11*x_3_2 - x11*x_3_4 - x11*x_4_0 - x11*x_4_1 - x11*x_4_2 - x11*x_4_3 - x12*x_2_3 - x12*x_2_4 - x12*x_3_0 - x12*x_3_1 - x12*x_3_2 - x12*x_3_4 - x12*x_4_0 - x12*x_4_1 - x12*x_4_2 - x12*x_4_3 - x13*x_2_1 - x13*x_2_3 - x13*x_2_4 - x13*x_3_0 - x13*x_3_2 - x13*x_3_4 - x13*x_4_0 - x13*x_4_1 - x13*x_4_2 - x13*x_4_3 - x14*x_2_1 - x14*x_2_3 - x14*x_2_4 - x14*x_3_0 - x14*x_3_1 - x14*x_3_2 - x14*x_3_4 - x14*x_4_0 - x14*x_4_2 - x14*x_4_3 - x15*x_3_0 - x15*x_3_1 - x15*x_3_2 - x15*x_3_4 - x15*x_4_0 - x15*x_4_1 - x15*x_4_2 - x15*x_4_3 - x16*x_3_1 - x16*x_3_4 - x16*x_4_0 - x16*x_4_1 - x16*x_4_2 - x16*x_4_3 - x17*x_3_0 - x17*x_3_1 - x17*x_3_2 - x17*x_3_4 - x17*x_4_1 - x17*x_4_3 - x18*x_4_0 - x18*x_4_1 - x18*x_4_2 - x18*x_4_3 - x19*x_4_0 - x19*x_4_1 - x19*x_4_2 - x19*x_4_3 - x2*x_2_0 - x2*x_2_1 - x2*x_2_3 - x2*x_2_4 - x2*x_3_0 - x2*x_3_1 - x2*x_3_2 - x2*x_3_4 - x2*x_4_2 - x2*x_4_3 - x20*x_4_0 - x20*x_4_1 - x20*x_4_2 - x20*x_4_3 - x21*x_4_0 - x21*x_4_1 - x21*x_4_2 - x22*x_2_0 - x22*x_2_1 - x22*x_2_3 - x22*x_2_4 - x22*x_3_2 - x22*x_3_4 - x22*x_4_0 - x22*x_4_1 - x22*x_4_2 - x22*x_4_3 - x23*x_2_0 - x23*x_2_3 - x23*x_2_4 - x23*x_3_1 - x23*x_3_2 - x23*x_3_4 - x23*x_4_0 - x23*x_4_1 - x23*x_4_2 - x23*x_4_3 - x24*x_2_0 - x24*x_2_1 - x24*x_2_3 - x24*x_2_4 - x24*x_3_2 - x24*x_3_4 - x24*x_4_0 - x24*x_4_1 - x24*x_4_2 - x24*x_4_3 - x25*x_2_0 - x25*x_2_1 - x25*x_2_3 - x25*x_2_4 - x25*x_3_1 - x25*x_3_2 - x25*x_3_4 - x25*x_4_0 - x25*x_4_2 - x25*x_4_3 - x26*x_3_1 - x26*x_3_4 - x26*x_4_0 - x26*x_4_1 - x26*x_4_2 - x26*x_4_3 - x27*x_3_1 - x27*x_3_2 - x27*x_3_4 - x27*x_4_0 - x27*x_4_1 - x27*x_4_2 - x27*x_4_3 - x28*x_3_1 - x28*x_3_4 - x28*x_4_0 - x28*x_4_1 - x28*x_4_2 - x28*x_4_3 - x29*x_3_1 - x29*x_3_2 - x29*x_3_4 - x29*x_4_0 - x29*x_4_1 - x29*x_4_3 - x3*x_3_0 - x3*x_3_1 - x3*x_3_2 - x3*x_3_4 - x3*x_4_0 - x3*x_4_1 - x3*x_4_2 - x3*x_4_3 - x30*x_4_0 - x30*x_4_1 - x30*x_4_2 - x30*x_4_3 - x31*x_4_0 - x31*x_4_1 - x31*x_4_2 - x31*x_4_3 - x32*x_4_1 - x32*x_4_2 - x33*x_2_0 - x33*x_2_1 - x33*x_2_3 - x33*x_2_4 - x33*x_3_0 - x33*x_3_1 - x33*x_3_2 - x33*x_3_4 - x33*x_4_2 - x33*x_4_3 - x34*x_2_0 - x34*x_2_3 - x34*x_2_4 - x34*x_3_0 - x34*x_3_1 - x34*x_3_2 - x34*x_3_4 - x34*x_4_1 - x34*x_4_2 - x34*x_4_3 - x35*x_2_0 - x35*x_2_1 - x35*x_2_3 - x35*x_2_4 - x35*x_3_0 - x35*x_3_2 - x35*x_3_4 - x35*x_4_1 - x35*x_4_2 - x35*x_4_3 - x36*x_2_0 - x36*x_2_1 - x36*x_2_3 - x36*x_2_4 - x36*x_3_0 - x36*x_3_1 - x36*x_3_2 - x36*x_3_4 - x36*x_4_2 - x36*x_4_3 - x37*x_3_0 - x37*x_3_1 - x37*x_3_2 - x37*x_3_4 - x37*x_4_1 - x37*x_4_3 - x38*x_3_0 - x38*x_3_1 - x38*x_3_2 - x38*x_3_4 - x38*x_4_1 - x38*x_4_2 - x38*x_4_3 - x39*x_3_0 - x39*x_3_1 - x39*x_3_4 - x39*x_4_1 - x39*x_4_2 - x39*x_4_3 - x4*x_3_0 - x4*x_3_1 - x4*x_3_2 - x4*x_3_4 - x4*x_4_0 - x4*x_4_1 - x4*x_4_2 - x4*x_4_3 - x40*x_3_0 - x40*x_3_1 - x40*x_3_2 - x40*x_3_4 - x40*x_4_1 - x40*x_4_3 - x41*x_4_1 - x41*x_4_2 - x42*x_4_1 - x42*x_4_2 - x42*x_4_3 - x43*x_4_1 - x43*x_4_2 - x43*x_4_3 - x44*x_4_1 - x44*x_4_2 - x45*x_3_0 - x45*x_3_1 - x45*x_3_2 - x45*x_3_4 - x45*x_4_0 - x45*x_4_1 - x45*x_4_2 - x45*x_4_3 - x46*x_3_0 - x46*x_3_1 - x46*x_3_2 - x46*x_3_4 - x46*x_4_0 - x46*x_4_1 - x46*x_4_2 - x46*x_4_3 - x47*x_3_0 - x47*x_3_1 - x47*x_3_4 - x47*x_4_0 - x47*x_4_1 - x47*x_4_2 - x47*x_4_3 - x48*x_3_0 - x48*x_3_1 - x48*x_3_2 - x48*x_3_4 - x48*x_4_0 - x48*x_4_1 - x48*x_4_3 - x49*x_4_0 - x49*x_4_1 - x49*x_4_2 - x49*x_4_3 - x5*x_3_0 - x5*x_3_1 - x5*x_3_4 - x5*x_4_0 - x5*x_4_1 - x5*x_4_2 - x5*x_4_3 - x50*x_4_0 - x50*x_4_1 - x50*x_4_2 - x50*x_4_3 - x51*x_4_0 - x51*x_4_1 - x51*x_4_2 - x51*x_4_3 - x52*x_4_0 - x52*x_4_1 - x52*x_4_2 - x53*x_3_0 - x53*x_3_1 - x53*x_3_2 - x53*x_3_4 - x53*x_4_0 - x53*x_4_1 - x53*x_4_2 - x53*x_4_3 - x54*x_3_0 - x54*x_3_4 - x54*x_4_0 - x54*x_4_1 - x54*x_4_2 - x54*x_4_3 - x55*x_3_0 - x55*x_3_1 - x55*x_3_2 - x55*x_3_4 - x55*x_4_0 - x55*x_4_3 - x56*x_4_0 - x56*x_4_1 - x56*x_4_2 - x56*x_4_3 - x57*x_4_0 - x57*x_4_1 - x57*x_4_2 - x57*x_4_3 - x58*x_4_0 - x58*x_4_1 - x58*x_4_2 - x58*x_4_3 - x59*x_4_0 - x59*x_4_1 - x59*x_4_2 - x6*x_3_0 - x6*x_3_1 - x6*x_3_2 - x6*x_3_4 - x6*x_4_0 - x6*x_4_1 - x6*x_4_3 - x60*x_3_0 - x60*x_3_2 - x60*x_3_4 - x60*x_4_0 - x60*x_4_1 - x60*x_4_2 - x60*x_4_3 - x61*x_3_0 - x61*x_3_4 - x61*x_4_0 - x61*x_4_1 - x61*x_4_2 - x61*x_4_3 - x62*x_3_0 - x62*x_3_4 - x62*x_4_0 - x62*x_4_1 - x62*x_4_2 - x62*x_4_3 - x63*x_3_0 - x63*x_3_2 - x63*x_3_4 - x63*x_4_0 - x63*x_4_1 - x63*x_4_3 - x64*x_4_0 - x64*x_4_1 - x64*x_4_2 - x64*x_4_3 - x65*x_4_0 - x65*x_4_1 - x65*x_4_2 - x65*x_4_3 - x66*x_4_0 - x66*x_4_2 - x67*x_3_0 - x67*x_3_1 - x67*x_3_2 - x67*x_3_4 - x67*x_4_0 - x67*x_4_2 - x67*x_4_3 - x68*x_3_0 - x68*x_3_1 - x68*x_3_2 - x68*x_3_4 - x68*x_4_0 - x68*x_4_3 - x69*x_3_0 - x69*x_3_1 - x69*x_3_4 - x69*x_4_0 - x69*x_4_2 - x69*x_4_3 - x7*x_4_0 - x7*x_4_1 - x7*x_4_2 - x7*x_4_3 - x70*x_3_0 - x70*x_3_1 - x70*x_3_2 - x70*x_3_4 - x70*x_4_0 - x70*x_4_3 - x71*x_4_0 - x71*x_4_2 - x71*x_4_3 - x72*x_4_0 - x72*x_4_2 - x73*x_4_0 - x73*x_4_2 - x73*x_4_3 - x74*x_4_0 - x74*x_4_2 - x75*x_4_0 - x75*x_4_1 - x75*x_4_2 - x75*x_4_3 - x76*x_4_0 - x76*x_4_1 - x76*x_4_2 - x76*x_4_3 - x77*x_4_0 - x77*x_4_1 - x77*x_4_2 - x77*x_4_3 - x78*x_4_0 - x78*x_4_1 - x78*x_4_2 - x79*x_4_0 - x79*x_4_1 - x79*x_4_2 - x79*x_4_3 - x8*x_4_0 - x8*x_4_1 - x8*x_4_2 - x8*x_4_3 - x80*x_4_0 - x80*x_4_1 - x80*x_4_2 - x80*x_4_3 - x81*x_4_0 - x81*x_4_1 - x81*x_4_2 - x81*x_4_3 - x82*x_4_0 - x82*x_4_1 - x82*x_4_2 - x83*x_4_0 - x83*x_4_1 - x83*x_4_2 - x83*x_4_3 - x84*x_4_0 - x84*x_4_1 - x84*x_4_2 - x84*x_4_3 - x85*x_4_0 - x85*x_4_1 - x86*x_4_0 - x86*x_4_1 - x86*x_4_3 - x87*x_4_0 - x87*x_4_1 - x87*x_4_3 - x88*x_4_0 - x88*x_4_1 - x89*x_4_0 - x89*x_4_1 - x9*x_4_0 - x9*x_4_1 - x9*x_4_2 - x9*x_4_3 + 3*x_0_1*x_1_2 + 3*x_0_1*x_1_3 + 3*x_0_1*x_1_4 + 3*x_0_1*x_2_0 + 3*x_0_1*x_2_1 + 3*x_0_1*x_2_3 + 3*x_0_1*x_2_4 + 3*x_0_1*x_3_0 + 3*x_0_1*x_3_1 + 3*x_0_1*x_3_2 + 3*x_0_1*x_3_4 + 3*x_0_1*x_4_0 + 3*x_0_1*x_4_1 + 3*x_0_1*x_4_2 + 3*x_0_1*x_4_3 - 6*x_0_1 + 3*x_0_2*x_1_0 + 3*x_0_2*x_1_2 + 3*x_0_2*x_1_3 + 3*x_0_2*x_1_4 + 3*x_0_2*x_2_1 + 3*x_0_2*x_2_3 + 3*x_0_2*x_2_4 + 3*x_0_2*x_3_0 + 3*x_0_2*x_3_1 + 3*x_0_2*x_3_2 + 3*x_0_2*x_3_4 + 3*x_0_2*x_4_0 + 3*x_0_2*x_4_1 + 3*x_0_2*x_4_2 + 3*x_0_2*x_4_3 - 6*x_0_2 + 3*x_0_3*x_1_0 + 3*x_0_3*x_1_2 + 3*x_0_3*x_1_3 + 3*x_0_3*x_1_4 + 3*x_0_3*x_2_0 + 3*x_0_3*x_2_1 + 3*x_0_3*x_2_3 + 3*x_0_3*x_2_4 + 3*x_0_3*x_3_1 + 3*x_0_3*x_3_2 + 3*x_0_3*x_3_4 + 3*x_0_3*x_4_0 + 3*x_0_3*x_4_1 + 3*x_0_3*x_4_2 + 3*x_0_3*x_4_3 - 6*x_0_3 + 3*x_0_4*x_1_0 + 3*x_0_4*x_1_2 + 3*x_0_4*x_1_3 + 3*x_0_4*x_1_4 + 3*x_0_4*x_2_0 + 3*x_0_4*x_2_1 + 3*x_0_4*x_2_3 + 3*x_0_4*x_2_4 + 3*x_0_4*x_3_0 + 3*x_0_4*x_3_1 + 3*x_0_4*x_3_2 + 3*x_0_4*x_3_4 + 3*x_0_4*x_4_1 + 3*x_0_4*x_4_2 + 3*x_0_4*x_4_3 - 6*x_0_4 + 3*x_1_0*x_2_0 + 3*x_1_0*x_2_1 + 3*x_1_0*x_2_3 + 3*x_1_0*x_2_4 + 3*x_1_0*x_3_0 + 3*x_1_0*x_3_1 + 3*x_1_0*x_3_2 + 3*x_1_0*x_3_4 + 3*x_1_0*x_4_0 + 3*x_1_0*x_4_1 + 3*x_1_0*x_4_2 + 3*x_1_0*x_4_3 - 6*x_1_0 + 3*x_1_2*x_2_0 + 3*x_1_2*x_2_3 + 3*x_1_2*x_2_4 + 3*x_1_2*x_3_0 + 3*x_1_2*x_3_1 + 3*x_1_2*x_3_2 + 3*x_1_2*x_3_4 + 3*x_1_2*x_4_0 + 3*x_1_2*x_4_1 + 3*x_1_2*x_4_2 + 3*x_1_2*x_4_3 - 6*x_1_2 + 3*x_1_3*x_2_0 + 3*x_1_3*x_2_1 + 3*x_1_3*x_2_3 + 3*x_1_3*x_2_4 + 3*x_1_3*x_3_0 + 3*x_1_3*x_3_2 + 3*x_1_3*x_3_4 + 3*x_1_3*x_4_0 + 3*x_1_3*x_4_1 + 3*x_1_3*x_4_2 + 3*x_1_3*x_4_3 - 6*x_1_3 + 3*x_1_4*x_2_0 + 3*x_1_4*x_2_1 + 3*x_1_4*x_2_3 + 3*x_1_4*x_2_4 + 3*x_1_4*x_3_0 + 3*x_1_4*x_3_1 + 3*x_1_4*x_3_2 + 3*x_1_4*x_3_4 + 3*x_1_4*x_4_0 + 3*x_1_4*x_4_2 + 3*x_1_4*x_4_3 - 6*x_1_4 + 3*x_2_0*x_3_0 + 3*x_2_0*x_3_1 + 3*x_2_0*x_3_2 + 3*x_2_0*x_3_4 + 3*x_2_0*x_4_0 + 3*x_2_0*x_4_1 + 3*x_2_0*x_4_2 + 3*x_2_0*x_4_3 - 6*x_2_0 + 3*x_2_1*x_3_0 + 3*x_2_1*x_3_1 + 3*x_2_1*x_3_2 + 3*x_2_1*x_3_4 + 3*x_2_1*x_4_0 + 3*x_2_1*x_4_1 + 3*x_2_1*x_4_2 + 3*x_2_1*x_4_3 - 6*x_2_1 + 3*x_2_3*x_3_0 + 3*x_2_3*x_3_1 + 3*x_2_3*x_3_4 + 3*x_2_3*x_4_0 + 3*x_2_3*x_4_1 + 3*x_2_3*x_4_2 + 3*x_2_3*x_4_3 - 6*x_2_3 + 3*x_2_4*x_3_0 + 3*x_2_4*x_3_1 + 3*x_2_4*x_3_2 + 3*x_2_4*x_3_4 + 3*x_2_4*x_4_0 + 3*x_2_4*x_4_1 + 3*x_2_4*x_4_3 - 6*x_2_4 + 3*x_3_0*x_4_0 + 3*x_3_0*x_4_1 + 3*x_3_0*x_4_2 + 3*x_3_0*x_4_3 - 6*x_3_0 + 3*x_3_1*x_4_0 + 3*x_3_1*x_4_1 + 3*x_3_1*x_4_2 + 3*x_3_1*x_4_3 - 6*x_3_1 + 3*x_3_2*x_4_0 + 3*x_3_2*x_4_1 + 3*x_3_2*x_4_2 + 3*x_3_2*x_4_3 - 6*x_3_2 + 3*x_3_4*x_4_0 + 3*x_3_4*x_4_1 + 3*x_3_4*x_4_2 - 6*x_3_4 - 6*x_4_0 - 6*x_4_1 - 6*x_4_2 - 6*x_4_3 + 10
    return result



# --------------------------------------------------------------------------
# Jacobian Function (S3_n5)
# Input: x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3, x_1_4, x_2_0, x_2_1,
# x_2_3, x_2_4, x_3_0, x_3_1, x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
# --------------------------------------------------------------------------
def calculate_S3_n5_jacobian(x_vec):
    """Calculates Jacobian of S_3 (n=5).
    Args:
        x_vec (numpy array or list/tuple): Input vector of length 20
           containing the strict upper triangle elements in row-wise order:
                      x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3,
           x_1_4, x_2_0, x_2_1, x_2_3, x_2_4, x_3_0, x_3_1,
           x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
           Diagonal elements are determined by stochastic constraint.
    
    Returns: list: Gradient vector.
    """
    # Assign vars
    x_0_1 = x_vec[0]
    x_0_2 = x_vec[1]
    x_0_3 = x_vec[2]
    x_0_4 = x_vec[3]
    x_1_0 = x_vec[4]
    x_1_2 = x_vec[5]
    x_1_3 = x_vec[6]
    x_1_4 = x_vec[7]
    x_2_0 = x_vec[8]
    x_2_1 = x_vec[9]
    x_2_3 = x_vec[10]
    x_2_4 = x_vec[11]
    x_3_0 = x_vec[12]
    x_3_1 = x_vec[13]
    x_3_2 = x_vec[14]
    x_3_4 = x_vec[15]
    x_4_0 = x_vec[16]
    x_4_1 = x_vec[17]
    x_4_2 = x_vec[18]
    x_4_3 = x_vec[19]
    # Jacobian CSE Defs
    x0 = -3*x_1_3
    x1 = -3*x_1_4
    x2 = -3*x_3_0
    x3 = -3*x_3_1
    x4 = -3*x_3_2
    x5 = -3*x_3_4
    x6 = -3*x_4_0
    x7 = -3*x_4_1
    x8 = -3*x_4_2
    x9 = -3*x_4_3
    x10 = x_1_3*x_3_4
    x11 = x_1_3*x_4_0
    x12 = x_1_3*x_4_1
    x13 = x_1_3*x_4_2
    x14 = x_1_3*x_4_3
    x15 = x_1_4*x_3_0
    x16 = x_1_4*x_3_1
    x17 = x_1_4*x_3_2
    x18 = x_1_4*x_3_4
    x19 = x_1_4*x_4_3
    x20 = x_3_0*x_4_0
    x21 = x_3_0*x_4_1
    x22 = x_3_0*x_4_2
    x23 = x_3_0*x_4_3
    x24 = x_3_1*x_4_0
    x25 = x_3_1*x_4_1
    x26 = x_3_1*x_4_2
    x27 = x_3_1*x_4_3
    x28 = x_3_2*x_4_0
    x29 = x_3_2*x_4_1
    x30 = x_3_2*x_4_2
    x31 = x_3_2*x_4_3
    x32 = x_3_4*x_4_0
    x33 = x_3_4*x_4_1
    x34 = x_3_4*x_4_2
    x35 = x0 + x1 + x10 + x11 + x12 + x13 + x14 + x15 + x16 + x17 + x18 + x19 + x2 + x20 + x21 + x22 + x23 + x24 + x25 + x26 + x27 + x28 + x29 + x3 + x30 + x31 + x32 + x33 + x34 + x4 + x5 + x6 + x7 + x8 + x9 + 6
    x36 = -3*x_1_2
    x37 = -3*x_2_0
    x38 = -3*x_2_1
    x39 = -3*x_2_3
    x40 = -3*x_2_4
    x41 = x_1_2*x_2_4
    x42 = x_1_2*x_4_0
    x43 = x_1_2*x_4_1
    x44 = x_1_2*x_4_2
    x45 = x_1_2*x_4_3
    x46 = x_1_4*x_2_0
    x47 = x_1_4*x_2_1
    x48 = x_1_4*x_2_3
    x49 = x_1_4*x_2_4
    x50 = x_1_4*x_4_2
    x51 = x_2_0*x_4_0
    x52 = x_2_0*x_4_1
    x53 = x_2_0*x_4_2
    x54 = x_2_0*x_4_3
    x55 = x_2_1*x_4_0
    x56 = x_2_1*x_4_1
    x57 = x_2_1*x_4_2
    x58 = x_2_1*x_4_3
    x59 = x_2_3*x_4_0
    x60 = x_2_3*x_4_1
    x61 = x_2_3*x_4_2
    x62 = x_2_3*x_4_3
    x63 = x_2_4*x_4_0
    x64 = x_2_4*x_4_1
    x65 = x_2_4*x_4_3
    x66 = x36 + x37 + x38 + x39 + x40 + x41 + x42 + x43 + x44 + x45 + x46 + x47 + x48 + x49 + x50 + x51 + x52 + x53 + x54 + x55 + x56 + x57 + x58 + x59 + x60 + x61 + x62 + x63 + x64 + x65
    x67 = x_1_2*x_2_3
    x68 = x_1_2*x_3_0
    x69 = x_1_2*x_3_1
    x70 = x_1_2*x_3_2
    x71 = x_1_2*x_3_4
    x72 = x_1_3*x_2_0
    x73 = x_1_3*x_2_1
    x74 = x_1_3*x_2_3
    x75 = x_1_3*x_2_4
    x76 = x_1_3*x_3_2
    x77 = x_2_0*x_3_0
    x78 = x_2_0*x_3_1
    x79 = x_2_0*x_3_2
    x80 = x_2_0*x_3_4
    x81 = x_2_1*x_3_0
    x82 = x_2_1*x_3_1
    x83 = x_2_1*x_3_2
    x84 = x_2_1*x_3_4
    x85 = x_2_3*x_3_0
    x86 = x_2_3*x_3_1
    x87 = x_2_3*x_3_4
    x88 = x_2_4*x_3_0
    x89 = x_2_4*x_3_1
    x90 = x_2_4*x_3_2
    x91 = x_2_4*x_3_4
    x92 = x67 + x68 + x69 + x70 + x71 + x72 + x73 + x74 + x75 + x76 + x77 + x78 + x79 + x80 + x81 + x82 + x83 + x84 + x85 + x86 + x87 + x88 + x89 + x90 + x91
    x93 = -3*x_1_0
    x94 = x_1_0*x_2_3
    x95 = x_1_0*x_2_4
    x96 = x_1_0*x_4_0
    x97 = x_1_0*x_4_1
    x98 = x_1_0*x_4_2
    x99 = x_1_0*x_4_3
    x100 = x_1_4*x_4_0
    x101 = x100 + x93 + x94 + x95 + x96 + x97 + x98 + x99
    x102 = x101 + x67 + x73 + x74 + x75
    x103 = x36 + x38
    x104 = x103 + x41 + x47 + x48 + x49
    x105 = x39 + x40 + x59 + x60 + x61 + x62 + x65 + x87 + x88 + x89 + x90 + x91
    x106 = x55 + x56 + x57 + x58 + x64 + x81 + x84
    x107 = x82 + x83 + x86
    x108 = x105 + x106 + x107
    x109 = x_1_0*x_3_0
    x110 = x_1_0*x_3_1
    x111 = x_1_0*x_3_2
    x112 = x_1_0*x_3_4
    x113 = x_1_3*x_3_0
    x114 = x109 + x110 + x111 + x112 + x113 + x35
    x115 = x42 + x43 + x44 + x45 + x50 + x68 + x71
    x116 = x69 + x70 + x76
    x117 = x114 + x115 + x116
    x118 = x107 + x116 + x78 + x89
    x119 = x28 + x29 + x30 + x31 + x34 + x80 + x87 + x90 + x91
    x120 = x_1_0*x_2_0
    x121 = x_1_0*x_2_1
    x122 = x_1_2*x_2_0
    x123 = x1 + x120 + x121 + x122 + x6 + x66 + x7 + x8 + x9 + 6
    x124 = x11 + x13 + x72
    x125 = x12 + x124 + x14 + x19
    x126 = x102 + x123 + x125
    x127 = x24 + x25 + x26 + x27 + x33
    x128 = x0 + x111 + x112 + x3 + x4 + x5
    x129 = x10 + x128 + x16 + x17 + x18
    x130 = x129 + x71 + x84
    x131 = x2 + x21 + x22 + x29 + x30 + x31 + x34 + x37 + x52 + x54 + x7 + x8 + x9 + 6
    x132 = x60 + x61 + x62 + x65
    x133 = x26 + x58
    x134 = x93 + x98 + x99
    x135 = x12 + x13 + x134 + x14 + x19
    x136 = x109 + x110 + x113 + x120 + x121 + x122 + x39 + x40 + x92 + x94 + x95
    x137 = x1 + x15 + x46
    x138 = x104 + x137
    x139 = x129 + x136 + x138
    x140 = x25 + x27 + x33 + x45
    x141 = x43 + x44 + x50 + x56 + x57 + x64
    x142 = -3*x_0_2
    x143 = x_0_2*x_2_4
    x144 = x_0_2*x_4_0
    x145 = x_0_2*x_4_1
    x146 = x_0_2*x_4_2
    x147 = x_0_2*x_4_3
    x148 = x_0_4*x_2_0
    x149 = x_0_4*x_2_1
    x150 = x_0_4*x_2_3
    x151 = x_0_4*x_2_4
    x152 = x_0_4*x_4_2
    x153 = x142 + x143 + x144 + x145 + x146 + x147 + x148 + x149 + x150 + x151 + x152
    x154 = x51 + x53 + x6 + x63
    x155 = x153 + x154 + x38
    x156 = x_0_2*x_2_3
    x157 = x_0_2*x_3_0
    x158 = x_0_2*x_3_1
    x159 = x_0_2*x_3_2
    x160 = x_0_2*x_3_4
    x161 = x_0_3*x_2_0
    x162 = x_0_3*x_2_1
    x163 = x_0_3*x_2_3
    x164 = x_0_3*x_2_4
    x165 = x_0_3*x_3_2
    x166 = x156 + x157 + x158 + x159 + x160 + x161 + x162 + x163 + x164 + x165
    x167 = x20 + x23 + x28 + x32
    x168 = x77 + x78 + x79 + x80 + x85
    x169 = x3 + x4
    x170 = x166 + x167 + x168 + x169
    x171 = -3*x_0_3
    x172 = -3*x_0_4
    x173 = x_0_3*x_3_4
    x174 = x_0_3*x_4_0
    x175 = x_0_3*x_4_1
    x176 = x_0_3*x_4_2
    x177 = x_0_3*x_4_3
    x178 = x_0_4*x_3_0
    x179 = x_0_4*x_3_1
    x180 = x_0_4*x_3_2
    x181 = x_0_4*x_3_4
    x182 = x_0_4*x_4_3
    x183 = x171 + x172 + x173 + x174 + x175 + x176 + x177 + x178 + x179 + x180 + x181 + x182
    x184 = x127 + x5
    x185 = x131 + x183 + x184
    x186 = -3*x_0_1
    x187 = x_0_1*x_2_3
    x188 = x_0_1*x_2_4
    x189 = x_0_1*x_4_0
    x190 = x_0_1*x_4_1
    x191 = x_0_1*x_4_2
    x192 = x_0_1*x_4_3
    x193 = x_0_4*x_4_1
    x194 = x186 + x187 + x188 + x189 + x190 + x191 + x192 + x193
    x195 = x156 + x161 + x163 + x164 + x194
    x196 = x157 + x159 + x160 + x165 + x195
    x197 = x144 + x145 + x146 + x147 + x152 + x158
    x198 = x_0_1*x_3_0
    x199 = x_0_1*x_3_1
    x200 = x_0_1*x_3_2
    x201 = x_0_1*x_3_4
    x202 = x_0_3*x_3_1
    x203 = x142 + x198 + x199 + x200 + x201 + x202
    x204 = x143 + x148 + x150 + x151 + x203
    x205 = x154 + x204
    x206 = x200 + x201
    x207 = x40 + x52 + x59 + x8
    x208 = x77 + x79 + x85 + x88
    x209 = x_0_1*x_2_0
    x210 = x_0_1*x_2_1
    x211 = x_0_2*x_2_1
    x212 = x172 + x209 + x210 + x211
    x213 = x162 + x174 + x175 + x176 + x177 + x182 + x212
    x214 = x213 + x54
    x215 = x21 + x7 + x9
    x216 = x20 + x215 + x22 + x23 + x32
    x217 = x171 + x2 + x37 + 6
    x218 = x173 + x178 + x180 + x181 + x217
    x219 = x218 + x39
    x220 = x219 + x5
    x221 = x107 + x81
    x222 = x147 + x174 + x177 + x182 + x24
    x223 = x187 + x188
    x224 = x149 + x179 + x212 + x223
    x225 = x224 + x40
    x226 = x186 + x191 + x192
    x227 = x176 + x226 + x8
    x228 = x144 + x146 + x152 + x55
    x229 = x228 + x9
    x230 = x100 + x189 + x190 + x193 + x96 + x97
    x231 = x134 + x183 + x226 + x230
    x232 = x_0_1*x_1_4
    x233 = x_0_4*x_1_0
    x234 = x_0_4*x_1_2
    x235 = x_0_4*x_1_3
    x236 = x_0_4*x_1_4
    x237 = x232 + x233 + x234 + x235 + x236
    x238 = x_0_1*x_1_3
    x239 = x_0_3*x_1_0
    x240 = x_0_3*x_1_2
    x241 = x_0_3*x_1_3
    x242 = x_0_3*x_1_4
    x243 = x238 + x239 + x240 + x241 + x242
    x244 = x237 + x243
    x245 = x198 + x199 + x202 + x244
    x246 = x245 + x36
    x247 = x160 + x197
    x248 = x232 + x233 + x236 + x242
    x249 = x235 + x238 + x239 + x241
    x250 = x_0_2*x_1_3
    x251 = x_0_2*x_1_4
    x252 = x250 + x251
    x253 = x203 + x252
    x254 = x157 + x159 + x165
    x255 = x253 + x254
    x256 = x_0_1*x_1_2 + x_0_2*x_1_0 + x_0_2*x_1_2
    x257 = x171 + x256
    x258 = x0 + x252
    x259 = x142 + x258
    x260 = x1 + x230 + x257 + x259 + 6
    x261 = x175 + x260
    x262 = x109 + x110 + x113 + x179
    x263 = x11 + x15 + x172 + x173 + x178 + x181 + x2 + x262 + x6
    x264 = x186 + x93
    x265 = x145 + x244 + x42
    x266 = x264 + x265
    x267 = x158 + x180 + x68
    x268 = x116 + x160 + x255
    x269 = x212 + x256
    x270 = x234 + x240
    x271 = x103 + x120 + x121 + x122 + x149
    x272 = x143 + x148 + x151 + x164 + x75 + x95
    x273 = x141 + x154 + x272 + x37 + x46 + x7
    x274 = x150 + x156 + x161 + x162 + x163 + x67 + x73 + x74 + x94
    x275 = x120 + x121 + x122 + x274 + x39
    x276 = x166 + x256 + x264
    x277 = x264 + x72
    # Final Gradient Calculation
    gradient = [
        -x35 - x66 - x92,
        -x102 - x104 - x108 - x117,
        -x118 - x119 - x126 - x127 - x130,
        -x131 - x132 - x133 - x135 - x139 - x140 - x141,
        -x108 - x155 - x170 - x185,
        -x105 - x167 - x168 - x169 - x185 - x196 - x197 - x205,
        -x106 - x119 - x132 - x155 - x196 - x206 - x207 - x208 - x214 - x216 - x220 - x4,
        -x133 - x170 - x205 - x22 - x220 - x221 - x222 - x225 - x227 - x229 - x30 - x31 - x34 - x38 - x54 - x59 - x61 - x62 - x65 - x84 - x87 - x88 - x89 - x90 - x91,
        -x117 - x206 - x231 - x246,
        -x114 - x231 - x247 - x248 - x249 - x255,
        -x10 - x112 - x115 - x135 - x16 - x174 - x177 - x18 - x182 - x184 - x201 - x216 - x227 - x246 - x247 - x261 - x263 - x3,
        -x1 - x12 - x129 - x14 - x140 - x167 - x175 - x19 - x192 - x215 - x222 - x230 - x257 - x263 - x266 - x267 - x268 - x29 - x36 - x71 - x99 - 6,
        -x126 - x153 - x194 - x237 - x258 - x269,
        -x101 - x123 - x153 - x195 - x213 - x248 - x251 - x257 - x270,
        -x125 - x134 - x147 - x188 - x214 - x226 - x229 - x260 - x265 - x271 - x273 - x40 - x41 - x45 - x47 - x49 - x52 - x58 - x8,
        -x104 - x124 - x149 - x176 - x191 - x207 - x212 - x223 - x228 - x261 - x266 - x273 - x275 - x60 - x98,
        -x139 - x209 - x210 - x211 - x217 - x223 - x243 - x253 - x276,
        -x103 - x128 - x136 - x204 - x218 - x224 - x249 - x250 - x270 - x276,
        -x130 - x137 - x158 - x168 - x187 - x219 - x221 - x244 - x262 - x268 - x269 - x271 - x274 - x277 - x48 - x68,
        -x109 - x110 - x111 - x113 - x118 - x138 - x169 - x17 - x200 - x208 - x217 - x225 - x245 - x254 - x256 - x259 - x267 - x272 - x275 - x277 - x81
    ]
    return gradient



# --------------------------------------------------------------------------
# Value Function (S4_n5)
# Input: x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3, x_1_4, x_2_0, x_2_1,
# x_2_3, x_2_4, x_3_0, x_3_1, x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
# --------------------------------------------------------------------------
def calculate_S4_n5(x_vec):
    """Calculates S_4 for n=5 general symm. stochastic matrix.
    Args:
        x_vec (numpy array or list/tuple): Input vector of length 20
           containing the strict upper triangle elements in row-wise order:
                      x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3,
           x_1_4, x_2_0, x_2_1, x_2_3, x_2_4, x_3_0, x_3_1,
           x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
           Diagonal elements are determined by stochastic constraint.
    
    Returns: float: S_4 value.
    """
    # Assign vars
    x_0_1 = x_vec[0]
    x_0_2 = x_vec[1]
    x_0_3 = x_vec[2]
    x_0_4 = x_vec[3]
    x_1_0 = x_vec[4]
    x_1_2 = x_vec[5]
    x_1_3 = x_vec[6]
    x_1_4 = x_vec[7]
    x_2_0 = x_vec[8]
    x_2_1 = x_vec[9]
    x_2_3 = x_vec[10]
    x_2_4 = x_vec[11]
    x_3_0 = x_vec[12]
    x_3_1 = x_vec[13]
    x_3_2 = x_vec[14]
    x_3_4 = x_vec[15]
    x_4_0 = x_vec[16]
    x_4_1 = x_vec[17]
    x_4_2 = x_vec[18]
    x_4_3 = x_vec[19]
    # S_k CSE Defs
    x0 = 3*x_0_1
    x1 = 3*x_0_2
    x2 = 3*x_0_3
    x3 = 3*x_0_4
    x4 = 3*x_1_0
    x5 = 3*x_1_2
    x6 = 3*x_1_3
    x7 = 3*x_1_4
    x8 = 3*x_2_0
    x9 = 3*x_2_1
    x10 = 3*x_2_3
    x11 = 3*x_2_4
    x12 = 3*x_3_0
    x13 = 3*x_3_1
    x14 = 3*x_3_2
    x15 = 3*x_3_4
    x16 = 2*x_0_1
    x17 = x_1_2*x_2_3
    x18 = x16*x_1_2
    x19 = x16*x_1_3
    x20 = x16*x_1_4
    x21 = x16*x_2_0
    x22 = x16*x_2_1
    x23 = x16*x_2_3
    x24 = x16*x_2_4
    x25 = x16*x_3_0
    x26 = x16*x_3_1
    x27 = x16*x_3_2
    x28 = x16*x_3_4
    x29 = 2*x_0_2
    x30 = x_1_0*x_2_3
    x31 = x29*x_1_0
    x32 = x29*x_1_2
    x33 = x29*x_1_3
    x34 = x29*x_1_4
    x35 = x29*x_2_1
    x36 = x29*x_2_3
    x37 = x29*x_2_4
    x38 = x29*x_3_0
    x39 = x29*x_3_1
    x40 = x29*x_3_2
    x41 = x29*x_3_4
    x42 = 2*x_0_3
    x43 = x_1_0*x_2_0
    x44 = x42*x_1_0
    x45 = x42*x_1_2
    x46 = x42*x_1_3
    x47 = x42*x_1_4
    x48 = x42*x_2_0
    x49 = x42*x_2_1
    x50 = x42*x_2_3
    x51 = x42*x_2_4
    x52 = x42*x_3_1
    x53 = x42*x_3_2
    x54 = x42*x_3_4
    x55 = 2*x_0_4
    x56 = x55*x_1_0
    x57 = x55*x_1_2
    x58 = x55*x_1_3
    x59 = x55*x_1_4
    x60 = x55*x_2_0
    x61 = x55*x_2_1
    x62 = x55*x_2_3
    x63 = x55*x_2_4
    x64 = x55*x_3_0
    x65 = x55*x_3_1
    x66 = x55*x_3_2
    x67 = x55*x_3_4
    x68 = 2*x43
    x69 = 2*x_3_0
    x70 = x_1_0*x_2_1
    x71 = 2*x70
    x72 = 2*x30
    x73 = x_1_0*x_2_4
    x74 = 2*x73
    x75 = x69*x_1_0
    x76 = 2*x_1_0
    x77 = x_3_1*x_4_0
    x78 = x76*x_3_1
    x79 = x76*x_3_2
    x80 = x76*x_3_4
    x81 = x_1_2*x_2_0
    x82 = 2*x81
    x83 = 2*x17
    x84 = x_1_2*x_2_4
    x85 = 2*x84
    x86 = x69*x_1_2
    x87 = 2*x_1_2
    x88 = x87*x_3_1
    x89 = x87*x_3_2
    x90 = x87*x_3_4
    x91 = x_1_3*x_2_0
    x92 = 2*x91
    x93 = x_1_3*x_2_1
    x94 = 2*x93
    x95 = x_1_3*x_2_3
    x96 = 2*x95
    x97 = x_1_3*x_2_4
    x98 = 2*x97
    x99 = x69*x_1_3
    x100 = 2*x_1_3
    x101 = x_3_2*x_4_0
    x102 = x100*x_3_2
    x103 = x100*x_3_4
    x104 = x_1_4*x_2_0
    x105 = 2*x104
    x106 = x_1_4*x_2_1
    x107 = 2*x106
    x108 = x_1_4*x_2_3
    x109 = 2*x108
    x110 = x_1_4*x_2_4
    x111 = 2*x110
    x112 = x69*x_1_4
    x113 = 2*x_1_4
    x114 = x113*x_4_2
    x115 = x_3_2*x_4_3
    x116 = x_3_4*x_4_0
    x117 = x69*x_2_0
    x118 = 2*x_2_0
    x119 = x118*x_3_1
    x120 = x118*x_3_2
    x121 = x118*x_3_4
    x122 = x69*x_2_1
    x123 = 2*x_2_1
    x124 = x123*x_3_1
    x125 = x123*x_3_2
    x126 = x123*x_3_4
    x127 = x69*x_2_3
    x128 = 2*x_2_3
    x129 = x128*x_3_1
    x130 = x_3_4*x_4_1
    x131 = x69*x_2_4
    x132 = 2*x_2_4
    x133 = x132*x_3_1
    x134 = x_3_2*x_4_1
    x135 = x17*x_0_1
    x136 = x84*x_0_1
    x137 = x_0_1*x_1_2
    x138 = x_3_0*x_4_0
    x139 = x137*x_3_0
    x140 = x137*x_3_1
    x141 = x137*x_4_2
    x142 = x91*x_0_1
    x143 = x93*x_0_1
    x144 = x95*x_0_1
    x145 = x97*x_0_1
    x146 = x_0_1*x_1_3
    x147 = x146*x_4_2
    x148 = x104*x_0_1
    x149 = x106*x_0_1
    x150 = x108*x_0_1
    x151 = x110*x_0_1
    x152 = x_0_1*x_1_4
    x153 = x_3_0*x_4_2
    x154 = x152*x_4_2
    x155 = x_0_1*x_2_0
    x156 = x155*x_3_0
    x157 = x155*x_3_1
    x158 = x155*x_4_2
    x159 = x_0_1*x_2_1
    x160 = x159*x_3_0
    x161 = x159*x_3_1
    x162 = x159*x_4_2
    x163 = x_0_1*x_2_3
    x164 = x163*x_3_0
    x165 = x163*x_3_1
    x166 = x_0_1*x_2_4
    x167 = x166*x_3_0
    x168 = x166*x_3_1
    x169 = x30*x_0_2
    x170 = x73*x_0_2
    x171 = x_0_2*x_1_0
    x172 = x171*x_3_0
    x173 = x171*x_3_1
    x174 = x171*x_4_2
    x175 = x17*x_0_2
    x176 = x84*x_0_2
    x177 = x_0_2*x_1_2
    x178 = x177*x_3_0
    x179 = x177*x_3_1
    x180 = x177*x_4_2
    x181 = x93*x_0_2
    x182 = x95*x_0_2
    x183 = x97*x_0_2
    x184 = x_0_2*x_1_3
    x185 = x184*x_3_0
    x186 = x184*x_4_2
    x187 = x106*x_0_2
    x188 = x108*x_0_2
    x189 = x110*x_0_2
    x190 = x_0_2*x_1_4
    x191 = x_3_0*x_4_3
    x192 = x190*x_4_2
    x193 = x_0_2*x_2_1
    x194 = x193*x_4_1
    x195 = x193*x_3_1
    x196 = x193*x_4_2
    x197 = x_0_2*x_2_3
    x198 = x197*x_3_1
    x199 = x_0_2*x_2_4
    x200 = x_3_0*x_4_1
    x201 = x199*x_3_1
    x202 = x43*x_0_3
    x203 = x70*x_0_3
    x204 = x30*x_0_3
    x205 = x73*x_0_3
    x206 = x_0_3*x_1_0
    x207 = x206*x_4_2
    x208 = x81*x_0_3
    x209 = x17*x_0_3
    x210 = x84*x_0_3
    x211 = x_0_3*x_1_2
    x212 = x211*x_3_1
    x213 = x211*x_4_2
    x214 = x91*x_0_3
    x215 = x93*x_0_3
    x216 = x95*x_0_3
    x217 = x97*x_0_3
    x218 = x_0_3*x_1_3
    x219 = x218*x_4_2
    x220 = x104*x_0_3
    x221 = x106*x_0_3
    x222 = x108*x_0_3
    x223 = x110*x_0_3
    x224 = x_0_3*x_1_4
    x225 = x_3_1*x_4_2
    x226 = x224*x_4_2
    x227 = x_0_3*x_2_0
    x228 = x227*x_3_1
    x229 = x_0_3*x_2_1
    x230 = x229*x_3_1
    x231 = x229*x_4_2
    x232 = x_0_3*x_2_3
    x233 = x232*x_3_1
    x234 = x_0_3*x_2_4
    x235 = x234*x_3_1
    x236 = x43*x_0_4
    x237 = x70*x_0_4
    x238 = x30*x_0_4
    x239 = x73*x_0_4
    x240 = x_0_4*x_1_0
    x241 = x240*x_4_2
    x242 = x81*x_0_4
    x243 = x17*x_0_4
    x244 = x84*x_0_4
    x245 = x_0_4*x_1_2
    x246 = x245*x_3_1
    x247 = x245*x_4_2
    x248 = x91*x_0_4
    x249 = x93*x_0_4
    x250 = x95*x_0_4
    x251 = x97*x_0_4
    x252 = x_0_4*x_1_3
    x253 = x252*x_4_2
    x254 = x104*x_0_4
    x255 = x106*x_0_4
    x256 = x108*x_0_4
    x257 = x110*x_0_4
    x258 = x_0_4*x_1_4
    x259 = x258*x_4_2
    x260 = x_0_4*x_2_0
    x261 = x260*x_3_1
    x262 = x_0_4*x_2_1
    x263 = x262*x_3_1
    x264 = x262*x_4_2
    x265 = x_0_4*x_2_3
    x266 = x265*x_3_1
    x267 = x_0_4*x_2_4
    x268 = x267*x_3_1
    x269 = x43*x_3_1
    x270 = x43*x_4_2
    x271 = x70*x_3_1
    x272 = x70*x_4_2
    x273 = x30*x_3_1
    x274 = x73*x_3_1
    x275 = x81*x_3_1
    x276 = x81*x_4_2
    x277 = x91*x_4_2
    x278 = x104*x_4_2
    # Final S_k Calculation
    result = x0*x_1_2 + x0*x_1_3 + x0*x_1_4 + x0*x_2_0 + x0*x_2_1 + x0*x_2_3 + x0*x_2_4 + x0*x_3_0 + x0*x_3_1 + x0*x_3_2 + x0*x_3_4 + x0*x_4_0 + x0*x_4_1 + x0*x_4_2 + x0*x_4_3 + x1*x_1_0 + x1*x_1_2 + x1*x_1_3 + x1*x_1_4 + x1*x_2_1 + x1*x_2_3 + x1*x_2_4 + x1*x_3_0 + x1*x_3_1 + x1*x_3_2 + x1*x_3_4 + x1*x_4_0 + x1*x_4_1 + x1*x_4_2 + x1*x_4_3 + x10*x_3_0 + x10*x_3_1 + x10*x_3_4 + x10*x_4_0 + x10*x_4_1 + x10*x_4_2 + x10*x_4_3 - x100*x101 + x101*x104 + x101*x106 + x101*x110 - x101*x113 - x101*x118 - x101*x123 - x101*x132 + x101*x137 + x101*x146 + x101*x155 + x101*x159 + x101*x166 + x101*x171 + x101*x177 + x101*x184 + x101*x190 + x101*x193 + x101*x206 + x101*x211 + x101*x218 + x101*x224 + x101*x229 + x101*x43 + x101*x70 + x101*x73 + x101*x81 + x101*x84 + x101*x91 + x101*x97 - x102*x_4_1 - x102*x_4_2 - x102*x_4_3 - x103*x_4_0 - x103*x_4_2 + x104*x115 + x104*x116 + x104*x138 + x104*x153 + x104*x191 + x104*x225 - x104*x69 + x104*x77 - x105*x_3_1 - x105*x_3_2 - x105*x_3_4 - x105*x_4_0 - x105*x_4_2 - x105*x_4_3 + x106*x116 + x106*x138 + x106*x191 - x106*x69 + x106*x77 - x107*x_3_1 - x107*x_3_2 - x107*x_3_4 - x107*x_4_0 - x107*x_4_3 + x108*x116 + x108*x138 + x108*x153 + x108*x191 - x108*x69 + x108*x77 - x109*x_3_1 - x109*x_3_4 - x109*x_4_0 - x109*x_4_2 - x109*x_4_3 + x11*x_3_0 + x11*x_3_1 + x11*x_3_2 + x11*x_3_4 + x11*x_4_0 + x11*x_4_1 + x11*x_4_3 + x110*x116 + x110*x138 + x110*x191 - x110*x69 + x110*x77 - x111*x_3_1 - x111*x_3_2 - x111*x_3_4 - x111*x_4_0 - x111*x_4_3 - x112*x_4_0 - x112*x_4_2 - x112*x_4_3 - x113*x115 - x113*x116 - x113*x77 - x114*x_3_1 - x114*x_3_2 - x114*x_3_4 - x115*x118 - x115*x123 + x115*x137 + x115*x146 + x115*x152 + x115*x155 + x115*x159 + x115*x171 + x115*x177 + x115*x184 + x115*x190 + x115*x193 + x115*x206 + x115*x211 + x115*x218 + x115*x224 + x115*x229 + x115*x240 + x115*x245 + x115*x252 + x115*x258 + x115*x262 + x115*x43 + x115*x70 + x115*x81 + x115*x91 - x116*x118 - x116*x123 - x116*x128 - x116*x132 + x116*x137 + x116*x155 + x116*x159 + x116*x163 + x116*x166 + x116*x17 + x116*x171 + x116*x177 + x116*x184 + x116*x190 + x116*x193 + x116*x30 + x116*x43 + x116*x70 + x116*x73 + x116*x81 + x116*x84 + x116*x91 + x116*x93 + x116*x95 + x116*x97 - x117*x_4_0 - x117*x_4_1 - x117*x_4_2 - x117*x_4_3 - x118*x77 - x119*x_4_1 - x119*x_4_2 - x119*x_4_3 + x12*x_4_0 + x12*x_4_1 + x12*x_4_2 + x12*x_4_3 - x120*x_4_1 - x120*x_4_2 - x121*x_4_1 - x121*x_4_2 - x122*x_4_0 - x122*x_4_1 - x122*x_4_2 - x122*x_4_3 - x123*x77 - x124*x_4_1 - x124*x_4_2 - x124*x_4_3 - x125*x_4_1 - x125*x_4_2 - x126*x_4_1 - x126*x_4_2 - x127*x_4_0 - x127*x_4_1 - x127*x_4_2 - x127*x_4_3 - x128*x130 - x128*x77 - x129*x_4_1 - x129*x_4_2 - x129*x_4_3 + x13*x_4_0 + x13*x_4_1 + x13*x_4_2 + x13*x_4_3 - x130*x132 + x130*x137 + x130*x155 + x130*x159 + x130*x163 + x130*x166 + x130*x171 + x130*x177 + x130*x193 + x130*x197 + x130*x199 + x130*x211 + x130*x227 + x130*x229 + x130*x232 + x130*x234 + x130*x245 + x130*x260 + x130*x262 + x130*x265 + x130*x267 + x130*x30 + x130*x43 + x130*x70 + x130*x73 + x130*x81 - x131*x_4_0 - x131*x_4_1 - x131*x_4_3 - x132*x134 - x132*x77 - x133*x_4_1 - x133*x_4_3 + x134*x137 + x134*x146 + x134*x155 + x134*x159 + x134*x166 + x134*x171 + x134*x177 + x134*x184 + x134*x193 + x134*x199 + x134*x206 + x134*x211 + x134*x218 + x134*x229 + x134*x234 + x134*x245 + x134*x252 + x134*x260 + x134*x262 + x134*x267 + x134*x43 + x134*x70 + x134*x73 + x134*x81 + x134*x91 + x135*x_3_4 + x135*x_4_0 + x135*x_4_1 + x135*x_4_2 + x135*x_4_3 + x136*x_3_0 + x136*x_3_1 + x136*x_3_2 + x136*x_3_4 + x136*x_4_3 + x137*x138 + x137*x77 + x138*x155 + x138*x159 + x138*x163 + x138*x166 + x138*x17 + x138*x171 + x138*x177 + x138*x184 + x138*x190 + x138*x193 + x138*x30 + x138*x43 + x138*x70 + x138*x73 + x138*x81 + x138*x84 + x138*x91 + x138*x93 + x138*x95 + x138*x97 + x139*x_4_1 + x139*x_4_2 + x139*x_4_3 + x14*x_4_0 + x14*x_4_1 + x14*x_4_2 + x14*x_4_3 + x140*x_4_1 + x140*x_4_2 + x140*x_4_3 + x141*x_3_2 + x141*x_3_4 + x142*x_3_4 + x142*x_4_0 + x142*x_4_1 + x142*x_4_2 + x142*x_4_3 + x143*x_3_4 + x143*x_4_0 + x143*x_4_1 + x143*x_4_2 + x143*x_4_3 + x144*x_3_4 + x144*x_4_0 + x144*x_4_1 + x144*x_4_2 + x144*x_4_3 + x145*x_3_2 + x145*x_3_4 + x145*x_4_0 + x145*x_4_1 + x145*x_4_3 + x147*x_3_2 + x147*x_3_4 + x148*x_3_0 + x148*x_3_1 + x148*x_3_2 + x148*x_3_4 + x148*x_4_3 + x149*x_3_0 + x149*x_3_1 + x149*x_3_2 + x149*x_3_4 + x149*x_4_3 + x15*x_4_0 + x15*x_4_1 + x15*x_4_2 + x150*x_3_0 + x150*x_3_1 + x150*x_3_4 + x150*x_4_2 + x150*x_4_3 + x151*x_3_0 + x151*x_3_1 + x151*x_3_2 + x151*x_3_4 + x151*x_4_3 + x152*x153 + x153*x155 + x153*x159 + x153*x163 + x153*x17 + x153*x171 + x153*x177 + x153*x184 + x153*x190 + x153*x193 + x153*x240 + x153*x245 + x153*x252 + x153*x258 + x153*x262 + x153*x30 + x153*x43 + x153*x70 + x153*x81 + x153*x91 + x153*x93 + x153*x95 + x154*x_3_1 + x154*x_3_2 + x154*x_3_4 + x155*x77 + x156*x_4_1 + x156*x_4_3 + x157*x_4_1 + x157*x_4_2 + x157*x_4_3 + x158*x_3_2 + x158*x_3_4 + x159*x77 - x16*x17 + x160*x_4_1 + x160*x_4_3 + x161*x_4_1 + x161*x_4_2 + x161*x_4_3 + x162*x_3_2 + x162*x_3_4 + x163*x77 + x164*x_4_1 + x164*x_4_3 + x165*x_4_1 + x165*x_4_2 + x165*x_4_3 + x166*x77 + x167*x_4_1 + x167*x_4_3 + x168*x_4_1 + x168*x_4_3 + x169*x_3_4 + x169*x_4_0 + x169*x_4_1 + x169*x_4_2 + x169*x_4_3 + x17*x191 + x17*x200 - x17*x29 - x17*x42 - x17*x55 - x17*x69 + x170*x_3_0 + x170*x_3_1 + x170*x_3_2 + x170*x_3_4 + x170*x_4_3 + x171*x77 + x172*x_4_1 + x172*x_4_3 + x173*x_4_1 + x173*x_4_2 + x173*x_4_3 + x174*x_3_2 + x174*x_3_4 + x175*x_3_4 + x175*x_4_0 + x175*x_4_1 + x175*x_4_2 + x175*x_4_3 + x176*x_3_0 + x176*x_3_1 + x176*x_3_2 + x176*x_3_4 + x176*x_4_3 + x177*x77 + x178*x_4_1 + x178*x_4_3 + x179*x_4_1 + x179*x_4_2 + x179*x_4_3 - x18*x_2_4 - x18*x_3_0 - x18*x_3_1 - x18*x_3_2 - x18*x_3_4 - x18*x_4_0 - x18*x_4_1 - x18*x_4_2 - x18*x_4_3 + x180*x_3_2 + x180*x_3_4 + x181*x_3_4 + x181*x_4_0 + x181*x_4_1 + x181*x_4_2 + x181*x_4_3 + x182*x_3_4 + x182*x_4_0 + x182*x_4_1 + x182*x_4_2 + x182*x_4_3 + x183*x_3_0 + x183*x_3_2 + x183*x_3_4 + x183*x_4_1 + x183*x_4_3 + x185*x_4_1 + x185*x_4_3 + x186*x_3_2 + x186*x_3_4 + x187*x_3_0 + x187*x_3_1 + x187*x_3_2 + x187*x_3_4 + x187*x_4_3 + x188*x_3_1 + x188*x_3_4 + x188*x_4_0 + x188*x_4_2 + x188*x_4_3 + x189*x_3_0 + x189*x_3_1 + x189*x_3_2 + x189*x_3_4 + x189*x_4_3 - x19*x_2_0 - x19*x_2_1 - x19*x_2_3 - x19*x_2_4 - x19*x_3_2 - x19*x_3_4 - x19*x_4_0 - x19*x_4_1 - x19*x_4_2 - x19*x_4_3 + x190*x191 + x190*x77 + x191*x193 + x191*x30 + x191*x43 + x191*x70 + x191*x73 + x191*x81 + x191*x84 + x191*x91 + x191*x93 + x191*x95 + x191*x97 + x192*x_3_1 + x192*x_3_2 + x192*x_3_4 + x193*x77 + x194*x_3_0 + x194*x_3_1 + x195*x_4_2 + x195*x_4_3 + x196*x_3_2 + x196*x_3_4 + x197*x77 + x198*x_4_1 + x198*x_4_2 + x198*x_4_3 + x199*x200 + x2*x_1_0 + x2*x_1_2 + x2*x_1_3 + x2*x_1_4 + x2*x_2_0 + x2*x_2_1 + x2*x_2_3 + x2*x_2_4 + x2*x_3_1 + x2*x_3_2 + x2*x_3_4 + x2*x_4_0 + x2*x_4_1 + x2*x_4_2 + x2*x_4_3 - x20*x_2_0 - x20*x_2_1 - x20*x_2_3 - x20*x_2_4 - x20*x_3_0 - x20*x_3_1 - x20*x_3_2 - x20*x_3_4 - x20*x_4_2 - x20*x_4_3 + x200*x245 + x200*x260 + x200*x262 + x200*x265 + x200*x267 + x200*x30 + x200*x43 + x200*x70 + x200*x73 + x200*x81 + x200*x91 + x200*x93 + x200*x95 + x200*x97 + x201*x_4_1 + x201*x_4_3 + x202*x_3_4 + x202*x_4_0 + x202*x_4_1 + x202*x_4_2 + x202*x_4_3 + x203*x_3_4 + x203*x_4_0 + x203*x_4_1 + x203*x_4_2 + x203*x_4_3 + x204*x_3_4 + x204*x_4_0 + x204*x_4_1 + x204*x_4_2 + x204*x_4_3 + x205*x_3_2 + x205*x_3_4 + x205*x_4_0 + x205*x_4_1 + x205*x_4_3 + x207*x_3_2 + x207*x_3_4 + x208*x_3_4 + x208*x_4_0 + x208*x_4_1 + x208*x_4_2 + x208*x_4_3 + x209*x_3_4 + x209*x_4_0 + x209*x_4_1 + x209*x_4_2 + x209*x_4_3 - x21*x_3_0 - x21*x_3_1 - x21*x_3_2 - x21*x_3_4 - x21*x_4_0 - x21*x_4_1 - x21*x_4_2 - x21*x_4_3 + x210*x_3_1 + x210*x_3_2 + x210*x_3_4 + x210*x_4_0 + x210*x_4_3 + x211*x77 + x212*x_4_1 + x212*x_4_2 + x212*x_4_3 + x213*x_3_2 + x213*x_3_4 + x214*x_3_4 + x214*x_4_0 + x214*x_4_1 + x214*x_4_2 + x214*x_4_3 + x215*x_3_4 + x215*x_4_0 + x215*x_4_1 + x215*x_4_2 + x215*x_4_3 + x216*x_3_4 + x216*x_4_0 + x216*x_4_1 + x216*x_4_2 + x216*x_4_3 + x217*x_3_2 + x217*x_3_4 + x217*x_4_0 + x217*x_4_1 + x217*x_4_3 + x219*x_3_2 + x219*x_3_4 - x22*x_3_0 - x22*x_3_1 - x22*x_3_2 - x22*x_3_4 - x22*x_4_0 - x22*x_4_1 - x22*x_4_2 - x22*x_4_3 + x220*x_3_1 + x220*x_3_4 + x220*x_4_0 + x220*x_4_2 + x220*x_4_3 + x221*x_3_1 + x221*x_3_2 + x221*x_3_4 + x221*x_4_0 + x221*x_4_3 + x222*x_3_1 + x222*x_3_4 + x222*x_4_0 + x222*x_4_2 + x222*x_4_3 + x223*x_3_1 + x223*x_3_2 + x223*x_3_4 + x223*x_4_0 + x223*x_4_3 + x224*x225 + x225*x227 + x225*x229 + x225*x232 + x225*x240 + x225*x245 + x225*x258 + x225*x262 + x225*x265 + x225*x30 + x225*x43 + x225*x70 + x225*x81 + x226*x_3_2 + x226*x_3_4 + x227*x77 + x228*x_4_1 + x228*x_4_3 + x229*x77 - x23*x_3_0 - x23*x_3_1 - x23*x_3_4 - x23*x_4_0 - x23*x_4_1 - x23*x_4_2 - x23*x_4_3 + x230*x_4_1 + x230*x_4_3 + x231*x_3_2 + x231*x_3_4 + x232*x77 + x233*x_4_1 + x233*x_4_3 + x234*x77 + x235*x_4_1 + x235*x_4_3 + x236*x_3_0 + x236*x_3_1 + x236*x_3_2 + x236*x_3_4 + x236*x_4_3 + x237*x_3_0 + x237*x_3_1 + x237*x_3_2 + x237*x_3_4 + x237*x_4_3 + x238*x_3_0 + x238*x_3_1 + x238*x_3_4 + x238*x_4_2 + x238*x_4_3 + x239*x_3_0 + x239*x_3_1 + x239*x_3_2 + x239*x_3_4 + x239*x_4_3 - x24*x_3_0 - x24*x_3_1 - x24*x_3_2 - x24*x_3_4 - x24*x_4_0 - x24*x_4_1 - x24*x_4_3 + x241*x_3_2 + x241*x_3_4 + x242*x_3_0 + x242*x_3_1 + x242*x_3_2 + x242*x_3_4 + x242*x_4_3 + x243*x_3_0 + x243*x_3_4 + x243*x_4_1 + x243*x_4_2 + x243*x_4_3 + x244*x_3_0 + x244*x_3_1 + x244*x_3_2 + x244*x_3_4 + x244*x_4_3 + x246*x_4_1 + x246*x_4_3 + x247*x_3_2 + x247*x_3_4 + x248*x_3_0 + x248*x_3_2 + x248*x_3_4 + x248*x_4_1 + x248*x_4_3 + x249*x_3_0 + x249*x_3_4 + x249*x_4_1 + x249*x_4_2 + x249*x_4_3 - x25*x_4_0 - x25*x_4_1 - x25*x_4_2 - x25*x_4_3 + x250*x_3_0 + x250*x_3_4 + x250*x_4_1 + x250*x_4_2 + x250*x_4_3 + x251*x_3_0 + x251*x_3_2 + x251*x_3_4 + x251*x_4_1 + x251*x_4_3 + x253*x_3_2 + x253*x_3_4 + x254*x_3_0 + x254*x_3_1 + x254*x_3_2 + x254*x_3_4 + x254*x_4_3 + x255*x_3_0 + x255*x_3_1 + x255*x_3_2 + x255*x_3_4 + x255*x_4_3 + x256*x_3_0 + x256*x_3_1 + x256*x_3_4 + x256*x_4_2 + x256*x_4_3 + x257*x_3_0 + x257*x_3_1 + x257*x_3_2 + x257*x_3_4 + x257*x_4_3 + x259*x_3_2 + x259*x_3_4 - x26*x_4_0 - x26*x_4_1 - x26*x_4_2 - x26*x_4_3 + x261*x_4_1 + x261*x_4_3 + x263*x_4_1 + x263*x_4_3 + x264*x_3_2 + x264*x_3_4 + x266*x_4_1 + x266*x_4_3 + x268*x_4_1 + x268*x_4_3 + x269*x_4_1 + x269*x_4_3 - x27*x_4_0 - x27*x_4_1 - x27*x_4_2 - x27*x_4_3 + x270*x_3_2 + x270*x_3_4 + x271*x_4_1 + x271*x_4_3 + x272*x_3_2 + x272*x_3_4 + x273*x_4_1 + x273*x_4_3 + x274*x_4_1 + x274*x_4_3 + x275*x_4_1 + x275*x_4_3 + x276*x_3_2 + x276*x_3_4 + x277*x_3_2 + x277*x_3_4 + x278*x_3_2 + x278*x_3_4 - x28*x_4_0 - x28*x_4_1 - x28*x_4_2 - x29*x30 + x3*x_1_0 + x3*x_1_2 + x3*x_1_3 + x3*x_1_4 + x3*x_2_0 + x3*x_2_1 + x3*x_2_3 + x3*x_2_4 + x3*x_3_0 + x3*x_3_1 + x3*x_3_2 + x3*x_3_4 + x3*x_4_1 + x3*x_4_2 + x3*x_4_3 - x30*x42 - x30*x55 - x30*x69 + x30*x77 - x31*x_2_4 - x31*x_3_0 - x31*x_3_1 - x31*x_3_2 - x31*x_3_4 - x31*x_4_0 - x31*x_4_1 - x31*x_4_2 - x31*x_4_3 - x32*x_2_4 - x32*x_3_0 - x32*x_3_1 - x32*x_3_2 - x32*x_3_4 - x32*x_4_0 - x32*x_4_1 - x32*x_4_2 - x32*x_4_3 - x33*x_2_1 - x33*x_2_3 - x33*x_2_4 - x33*x_3_0 - x33*x_3_2 - x33*x_3_4 - x33*x_4_0 - x33*x_4_1 - x33*x_4_2 - x33*x_4_3 - x34*x_2_1 - x34*x_2_3 - x34*x_2_4 - x34*x_3_0 - x34*x_3_1 - x34*x_3_2 - x34*x_3_4 - x34*x_4_0 - x34*x_4_2 - x34*x_4_3 - x35*x_3_0 - x35*x_3_1 - x35*x_3_2 - x35*x_3_4 - x35*x_4_0 - x35*x_4_1 - x35*x_4_2 - x35*x_4_3 - x36*x_3_1 - x36*x_3_4 - x36*x_4_0 - x36*x_4_1 - x36*x_4_2 - x36*x_4_3 - x37*x_3_0 - x37*x_3_1 - x37*x_3_2 - x37*x_3_4 - x37*x_4_1 - x37*x_4_3 - x38*x_4_0 - x38*x_4_1 - x38*x_4_2 - x38*x_4_3 - x39*x_4_0 - x39*x_4_1 - x39*x_4_2 - x39*x_4_3 + x4*x_2_0 + x4*x_2_1 + x4*x_2_3 + x4*x_2_4 + x4*x_3_0 + x4*x_3_1 + x4*x_3_2 + x4*x_3_4 + x4*x_4_0 + x4*x_4_1 + x4*x_4_2 + x4*x_4_3 - x40*x_4_0 - x40*x_4_1 - x40*x_4_2 - x40*x_4_3 - x41*x_4_0 - x41*x_4_1 - x41*x_4_2 - x42*x43 - x43*x55 + x43*x77 - x44*x_2_1 - x44*x_2_4 - x44*x_3_2 - x44*x_3_4 - x44*x_4_0 - x44*x_4_1 - x44*x_4_2 - x44*x_4_3 - x45*x_2_0 - x45*x_2_4 - x45*x_3_1 - x45*x_3_2 - x45*x_3_4 - x45*x_4_0 - x45*x_4_1 - x45*x_4_2 - x45*x_4_3 - x46*x_2_0 - x46*x_2_1 - x46*x_2_3 - x46*x_2_4 - x46*x_3_2 - x46*x_3_4 - x46*x_4_0 - x46*x_4_1 - x46*x_4_2 - x46*x_4_3 - x47*x_2_0 - x47*x_2_1 - x47*x_2_3 - x47*x_2_4 - x47*x_3_1 - x47*x_3_2 - x47*x_3_4 - x47*x_4_0 - x47*x_4_2 - x47*x_4_3 - x48*x_3_1 - x48*x_3_4 - x48*x_4_0 - x48*x_4_1 - x48*x_4_2 - x48*x_4_3 - x49*x_3_1 - x49*x_3_2 - x49*x_3_4 - x49*x_4_0 - x49*x_4_1 - x49*x_4_2 - x49*x_4_3 + x5*x_2_0 + x5*x_2_3 + x5*x_2_4 + x5*x_3_0 + x5*x_3_1 + x5*x_3_2 + x5*x_3_4 + x5*x_4_0 + x5*x_4_1 + x5*x_4_2 + x5*x_4_3 - x50*x_3_1 - x50*x_3_4 - x50*x_4_0 - x50*x_4_1 - x50*x_4_2 - x50*x_4_3 - x51*x_3_1 - x51*x_3_2 - x51*x_3_4 - x51*x_4_0 - x51*x_4_1 - x51*x_4_3 - x52*x_4_0 - x52*x_4_1 - x52*x_4_2 - x52*x_4_3 - x53*x_4_0 - x53*x_4_1 - x53*x_4_2 - x53*x_4_3 - x54*x_4_1 - x54*x_4_2 - x56*x_2_1 - x56*x_2_4 - x56*x_3_0 - x56*x_3_1 - x56*x_3_2 - x56*x_3_4 - x56*x_4_2 - x56*x_4_3 - x57*x_2_0 - x57*x_2_4 - x57*x_3_0 - x57*x_3_1 - x57*x_3_2 - x57*x_3_4 - x57*x_4_1 - x57*x_4_2 - x57*x_4_3 - x58*x_2_0 - x58*x_2_1 - x58*x_2_3 - x58*x_2_4 - x58*x_3_0 - x58*x_3_2 - x58*x_3_4 - x58*x_4_1 - x58*x_4_2 - x58*x_4_3 - x59*x_2_0 - x59*x_2_1 - x59*x_2_3 - x59*x_2_4 - x59*x_3_0 - x59*x_3_1 - x59*x_3_2 - x59*x_3_4 - x59*x_4_2 - x59*x_4_3 + x6*x_2_0 + x6*x_2_1 + x6*x_2_3 + x6*x_2_4 + x6*x_3_0 + x6*x_3_2 + x6*x_3_4 + x6*x_4_0 + x6*x_4_1 + x6*x_4_2 + x6*x_4_3 - x60*x_3_0 - x60*x_3_1 - x60*x_3_2 - x60*x_3_4 - x60*x_4_1 - x60*x_4_3 - x61*x_3_0 - x61*x_3_1 - x61*x_3_2 - x61*x_3_4 - x61*x_4_1 - x61*x_4_2 - x61*x_4_3 - x62*x_3_0 - x62*x_3_1 - x62*x_3_4 - x62*x_4_1 - x62*x_4_2 - x62*x_4_3 - x63*x_3_0 - x63*x_3_1 - x63*x_3_2 - x63*x_3_4 - x63*x_4_1 - x63*x_4_3 - x64*x_4_1 - x64*x_4_2 - x65*x_4_1 - x65*x_4_2 - x65*x_4_3 - x66*x_4_1 - x66*x_4_2 - x66*x_4_3 - x67*x_4_1 - x67*x_4_2 - x68*x_3_0 - x68*x_3_1 - x68*x_3_2 - x68*x_3_4 - x68*x_4_0 - x68*x_4_1 - x68*x_4_2 - x68*x_4_3 - x69*x70 - x69*x73 - x69*x81 - x69*x84 - x69*x91 - x69*x93 - x69*x95 - x69*x97 + x7*x_2_0 + x7*x_2_1 + x7*x_2_3 + x7*x_2_4 + x7*x_3_0 + x7*x_3_1 + x7*x_3_2 + x7*x_3_4 + x7*x_4_0 + x7*x_4_2 + x7*x_4_3 + x70*x77 - x71*x_3_1 - x71*x_3_2 - x71*x_3_4 - x71*x_4_0 - x71*x_4_1 - x71*x_4_2 - x71*x_4_3 - x72*x_3_1 - x72*x_3_4 - x72*x_4_0 - x72*x_4_1 - x72*x_4_2 - x72*x_4_3 + x73*x77 - x74*x_3_1 - x74*x_3_2 - x74*x_3_4 - x74*x_4_0 - x74*x_4_1 - x74*x_4_3 - x75*x_4_0 - x75*x_4_1 - x75*x_4_2 - x75*x_4_3 - x76*x77 + x77*x81 + x77*x84 - x77*x87 - x78*x_4_1 - x78*x_4_2 - x78*x_4_3 - x79*x_4_0 - x79*x_4_1 - x79*x_4_2 - x79*x_4_3 + x8*x_3_0 + x8*x_3_1 + x8*x_3_2 + x8*x_3_4 + x8*x_4_0 + x8*x_4_1 + x8*x_4_2 + x8*x_4_3 - x80*x_4_0 - x80*x_4_1 - x80*x_4_2 - x82*x_3_1 - x82*x_3_2 - x82*x_3_4 - x82*x_4_0 - x82*x_4_1 - x82*x_4_2 - x82*x_4_3 - x83*x_3_4 - x83*x_4_0 - x83*x_4_1 - x83*x_4_2 - x83*x_4_3 - x85*x_3_1 - x85*x_3_2 - x85*x_3_4 - x85*x_4_0 - x85*x_4_3 - x86*x_4_0 - x86*x_4_1 - x86*x_4_2 - x86*x_4_3 - x88*x_4_1 - x88*x_4_2 - x88*x_4_3 - x89*x_4_0 - x89*x_4_1 - x89*x_4_2 - x89*x_4_3 + x9*x_3_0 + x9*x_3_1 + x9*x_3_2 + x9*x_3_4 + x9*x_4_0 + x9*x_4_1 + x9*x_4_2 + x9*x_4_3 - x90*x_4_0 - x90*x_4_1 - x90*x_4_2 - x92*x_3_2 - x92*x_3_4 - x92*x_4_0 - x92*x_4_1 - x92*x_4_2 - x92*x_4_3 - x94*x_3_4 - x94*x_4_0 - x94*x_4_1 - x94*x_4_2 - x94*x_4_3 - x96*x_3_4 - x96*x_4_0 - x96*x_4_1 - x96*x_4_2 - x96*x_4_3 - x98*x_3_2 - x98*x_3_4 - x98*x_4_0 - x98*x_4_1 - x98*x_4_3 - x99*x_4_0 - x99*x_4_1 - x99*x_4_2 - x99*x_4_3 - 4*x_0_1 - 4*x_0_2 - 4*x_0_3 - 4*x_0_4 - 4*x_1_0 - 4*x_1_2 - 4*x_1_3 - 4*x_1_4 - 4*x_2_0 - 4*x_2_1 - 4*x_2_3 - 4*x_2_4 - 4*x_3_0 - 4*x_3_1 - 4*x_3_2 - 4*x_3_4 - 4*x_4_0 - 4*x_4_1 - 4*x_4_2 - 4*x_4_3 + 5
    return result



# --------------------------------------------------------------------------
# Jacobian Function (S4_n5)
# Input: x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3, x_1_4, x_2_0, x_2_1,
# x_2_3, x_2_4, x_3_0, x_3_1, x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
# --------------------------------------------------------------------------
def calculate_S4_n5_jacobian(x_vec):
    """Calculates Jacobian of S_4 (n=5).
    Args:
        x_vec (numpy array or list/tuple): Input vector of length 20
           containing the strict upper triangle elements in row-wise order:
                      x_0_1, x_0_2, x_0_3, x_0_4, x_1_0, x_1_2, x_1_3,
           x_1_4, x_2_0, x_2_1, x_2_3, x_2_4, x_3_0, x_3_1,
           x_3_2, x_3_4, x_4_0, x_4_1, x_4_2, x_4_3
           Diagonal elements are determined by stochastic constraint.
    
    Returns: list: Gradient vector.
    """
    # Assign vars
    x_0_1 = x_vec[0]
    x_0_2 = x_vec[1]
    x_0_3 = x_vec[2]
    x_0_4 = x_vec[3]
    x_1_0 = x_vec[4]
    x_1_2 = x_vec[5]
    x_1_3 = x_vec[6]
    x_1_4 = x_vec[7]
    x_2_0 = x_vec[8]
    x_2_1 = x_vec[9]
    x_2_3 = x_vec[10]
    x_2_4 = x_vec[11]
    x_3_0 = x_vec[12]
    x_3_1 = x_vec[13]
    x_3_2 = x_vec[14]
    x_3_4 = x_vec[15]
    x_4_0 = x_vec[16]
    x_4_1 = x_vec[17]
    x_4_2 = x_vec[18]
    x_4_3 = x_vec[19]
    # Jacobian CSE Defs
    x0 = x_1_2*x_3_1
    x1 = x0*x_4_1
    x2 = x0*x_4_2
    x3 = x0*x_4_3
    x4 = x_1_2*x_3_2
    x5 = x4*x_4_1
    x6 = x4*x_4_2
    x7 = x4*x_4_3
    x8 = x_1_2*x_3_4
    x9 = x8*x_4_1
    x10 = x8*x_4_2
    x11 = x_1_3*x_3_2
    x12 = x11*x_4_1
    x13 = x11*x_4_2
    x14 = x11*x_4_3
    x15 = x_3_4*x_4_2
    x16 = x15*x_1_3
    x17 = x_1_4*x_4_2
    x18 = x17*x_3_1
    x19 = x17*x_3_2
    x20 = x_3_2*x_4_3
    x21 = x20*x_1_4
    x22 = x15*x_1_4
    x23 = 3*x_1_3
    x24 = 3*x_1_4
    x25 = 3*x_3_0
    x26 = 3*x_3_1
    x27 = 3*x_3_2
    x28 = 3*x_3_4
    x29 = 3*x_4_0
    x30 = 3*x_4_1
    x31 = 3*x_4_2
    x32 = 3*x_4_3
    x33 = 2*x_1_3
    x34 = -x33*x_3_4
    x35 = -x33*x_4_0
    x36 = -x33*x_4_1
    x37 = -x33*x_4_2
    x38 = -x33*x_4_3
    x39 = 2*x_1_4
    x40 = -x39*x_3_0
    x41 = -x39*x_3_1
    x42 = -x39*x_3_2
    x43 = -x39*x_3_4
    x44 = -x39*x_4_3
    x45 = 2*x_3_0
    x46 = -x45*x_4_0
    x47 = -x45*x_4_1
    x48 = -x45*x_4_2
    x49 = -x45*x_4_3
    x50 = 2*x_3_1
    x51 = -x50*x_4_0
    x52 = -x50*x_4_1
    x53 = -x50*x_4_2
    x54 = -x50*x_4_3
    x55 = 2*x_3_2
    x56 = -x55*x_4_0
    x57 = -x55*x_4_1
    x58 = -x55*x_4_2
    x59 = -x55*x_4_3
    x60 = 2*x_3_4
    x61 = -x60*x_4_0
    x62 = -x60*x_4_1
    x63 = -x60*x_4_2
    x64 = x23 + x24 + x25 + x26 + x27 + x28 + x29 + x30 + x31 + x32 + x34 + x35 + x36 + x37 + x38 + x40 + x41 + x42 + x43 + x44 + x46 + x47 + x48 + x49 + x51 + x52 + x53 + x54 + x56 + x57 + x58 + x59 + x61 + x62 + x63 - 4
    x65 = x_1_2*x_3_0
    x66 = x65*x_4_0
    x67 = x65*x_4_1
    x68 = x65*x_4_2
    x69 = x65*x_4_3
    x70 = x8*x_4_0
    x71 = x17*x_3_0
    x72 = x66 + x67 + x68 + x69 + x70 + x71
    x73 = x0*x_4_0 + x11*x_4_0 + x4*x_4_0
    x74 = x1 + x10 + x12 + x13 + x14 + x16 + x18 + x19 + x2 + x21 + x22 + x3 + x5 + x6 + x64 + x7 + x72 + x73 + x9
    x75 = x_1_2*x_2_3
    x76 = x75*x_4_1
    x77 = x75*x_4_2
    x78 = x75*x_4_3
    x79 = x_1_2*x_2_4
    x80 = x79*x_4_3
    x81 = x_1_3*x_2_1
    x82 = x81*x_4_1
    x83 = x81*x_4_2
    x84 = x81*x_4_3
    x85 = x_1_3*x_2_3
    x86 = x85*x_4_1
    x87 = x85*x_4_2
    x88 = x85*x_4_3
    x89 = x_1_3*x_2_4
    x90 = x89*x_4_1
    x91 = x89*x_4_3
    x92 = x_1_4*x_2_1
    x93 = x92*x_4_3
    x94 = x_1_4*x_2_3
    x95 = x94*x_4_2
    x96 = x94*x_4_3
    x97 = x_1_4*x_2_4
    x98 = x97*x_4_3
    x99 = 3*x_1_2
    x100 = 3*x_2_0
    x101 = 3*x_2_1
    x102 = 3*x_2_3
    x103 = 3*x_2_4
    x104 = 2*x_1_2
    x105 = -x104*x_2_4
    x106 = -x104*x_4_0
    x107 = -x104*x_4_1
    x108 = -x104*x_4_2
    x109 = -x104*x_4_3
    x110 = -x39*x_2_0
    x111 = -x39*x_2_1
    x112 = -x39*x_2_3
    x113 = -x39*x_2_4
    x114 = -x39*x_4_2
    x115 = 2*x_2_0
    x116 = -x115*x_4_0
    x117 = -x115*x_4_1
    x118 = -x115*x_4_2
    x119 = -x115*x_4_3
    x120 = 2*x_2_1
    x121 = -x120*x_4_0
    x122 = -x120*x_4_1
    x123 = -x120*x_4_2
    x124 = -x120*x_4_3
    x125 = 2*x_2_3
    x126 = -x125*x_4_0
    x127 = -x125*x_4_1
    x128 = -x125*x_4_2
    x129 = -x125*x_4_3
    x130 = 2*x_2_4
    x131 = -x130*x_4_0
    x132 = -x130*x_4_1
    x133 = -x130*x_4_3
    x134 = x100 + x101 + x102 + x103 + x105 + x106 + x107 + x108 + x109 + x110 + x111 + x112 + x113 + x114 + x116 + x117 + x118 + x119 + x121 + x122 + x123 + x124 + x126 + x127 + x128 + x129 + x131 + x132 + x133 + x99
    x135 = x_1_3*x_2_0
    x136 = x135*x_4_0
    x137 = x135*x_4_1
    x138 = x135*x_4_2
    x139 = x135*x_4_3
    x140 = x89*x_4_0
    x141 = x_1_4*x_2_0
    x142 = x141*x_4_3
    x143 = x136 + x137 + x138 + x139 + x140 + x142
    x144 = x75*x_4_0 + x81*x_4_0 + x85*x_4_0
    x145 = x134 + x143 + x144 + x76 + x77 + x78 + x80 + x82 + x83 + x84 + x86 + x87 + x88 + x90 + x91 + x93 + x95 + x96 + x98
    x146 = x75*x_3_4
    x147 = x79*x_3_1
    x148 = x79*x_3_2
    x149 = x79*x_3_4
    x150 = x81*x_3_4
    x151 = x85*x_3_4
    x152 = x89*x_3_2
    x153 = x89*x_3_4
    x154 = x92*x_3_1
    x155 = x92*x_3_2
    x156 = x92*x_3_4
    x157 = x94*x_3_1
    x158 = x94*x_3_4
    x159 = x97*x_3_1
    x160 = x97*x_3_2
    x161 = x97*x_3_4
    x162 = -x104*x_2_3
    x163 = -x104*x_3_0
    x164 = -x104*x_3_1
    x165 = -x104*x_3_2
    x166 = -x104*x_3_4
    x167 = -x33*x_2_0
    x168 = -x33*x_2_1
    x169 = -x33*x_2_3
    x170 = -x33*x_2_4
    x171 = -x33*x_3_2
    x172 = -x115*x_3_0
    x173 = -x115*x_3_1
    x174 = -x115*x_3_2
    x175 = -x115*x_3_4
    x176 = -x120*x_3_0
    x177 = -x120*x_3_1
    x178 = -x120*x_3_2
    x179 = -x120*x_3_4
    x180 = -x125*x_3_0
    x181 = -x125*x_3_1
    x182 = -x125*x_3_4
    x183 = -x130*x_3_0
    x184 = -x130*x_3_1
    x185 = -x130*x_3_2
    x186 = -x130*x_3_4
    x187 = x162 + x163 + x164 + x165 + x166 + x167 + x168 + x169 + x170 + x171 + x172 + x173 + x174 + x175 + x176 + x177 + x178 + x179 + x180 + x181 + x182 + x183 + x184 + x185 + x186
    x188 = x135*x_3_4
    x189 = x141*x_3_0
    x190 = x141*x_3_1
    x191 = x141*x_3_2
    x192 = x141*x_3_4
    x193 = x94*x_3_0
    x194 = x188 + x189 + x190 + x191 + x192 + x193
    x195 = x79*x_3_0 + x92*x_3_0 + x97*x_3_0
    x196 = x146 + x147 + x148 + x149 + x150 + x151 + x152 + x153 + x154 + x155 + x156 + x157 + x158 + x159 + x160 + x161 + x187 + x194 + x195
    x197 = x_2_1*x_3_1
    x198 = x197*x_4_1
    x199 = x197*x_4_2
    x200 = x197*x_4_3
    x201 = x_2_1*x_3_2
    x202 = x201*x_4_1
    x203 = x201*x_4_2
    x204 = x20*x_2_1
    x205 = x_2_1*x_3_4
    x206 = x205*x_4_1
    x207 = x15*x_2_1
    x208 = x_2_3*x_3_1
    x209 = x208*x_4_1
    x210 = x208*x_4_2
    x211 = x208*x_4_3
    x212 = x_2_3*x_3_4
    x213 = x212*x_4_1
    x214 = x_2_4*x_3_1
    x215 = x214*x_4_1
    x216 = x214*x_4_3
    x217 = x_2_4*x_3_2
    x218 = x217*x_4_1
    x219 = x_2_4*x_3_4
    x220 = x219*x_4_1
    x221 = x_2_0*x_3_0
    x222 = x221*x_4_0
    x223 = x221*x_4_1
    x224 = x221*x_4_2
    x225 = x221*x_4_3
    x226 = x_2_0*x_3_1
    x227 = x226*x_4_0
    x228 = x226*x_4_1
    x229 = x226*x_4_2
    x230 = x226*x_4_3
    x231 = x_2_0*x_3_2
    x232 = x231*x_4_0
    x233 = x231*x_4_1
    x234 = x231*x_4_2
    x235 = x20*x_2_0
    x236 = x_2_0*x_3_4
    x237 = x236*x_4_0
    x238 = x236*x_4_1
    x239 = x15*x_2_0
    x240 = x_2_3*x_3_0
    x241 = x240*x_4_0
    x242 = x240*x_4_1
    x243 = x240*x_4_2
    x244 = x240*x_4_3
    x245 = x212*x_4_0
    x246 = x_2_4*x_3_0
    x247 = x246*x_4_0
    x248 = x246*x_4_3
    x249 = x214*x_4_0
    x250 = x217*x_4_0
    x251 = x219*x_4_0
    x252 = x222 + x223 + x224 + x225 + x227 + x228 + x229 + x230 + x232 + x233 + x234 + x235 + x237 + x238 + x239 + x241 + x242 + x243 + x244 + x245 + x247 + x248 + x249 + x250 + x251
    x253 = x_2_1*x_3_0
    x254 = x253*x_4_0
    x255 = x253*x_4_1
    x256 = x253*x_4_2
    x257 = x253*x_4_3
    x258 = x205*x_4_0
    x259 = x246*x_4_1
    x260 = x254 + x255 + x256 + x257 + x258 + x259
    x261 = x197*x_4_0 + x201*x_4_0 + x208*x_4_0
    x262 = x198 + x199 + x200 + x202 + x203 + x204 + x206 + x207 + x209 + x210 + x211 + x213 + x215 + x216 + x218 + x220 + x252 + x260 + x261
    x263 = x102 + x103 + x126 + x127 + x128 + x129 + x133 + x182 + x183 + x184 + x185 + x186
    x264 = x121 + x122 + x123 + x124 + x132 + x176 + x179 + x260
    x265 = x106 + x107 + x108 + x109 + x114
    x266 = x163 + x164 + x165 + x166 + x171
    x267 = x_1_0*x_3_0
    x268 = x267*x_4_0
    x269 = x267*x_4_1
    x270 = x267*x_4_2
    x271 = x_1_0*x_4_3
    x272 = x271*x_3_0
    x273 = x_1_0*x_3_1
    x274 = x273*x_4_0
    x275 = x273*x_4_1
    x276 = x273*x_4_2
    x277 = x271*x_3_1
    x278 = x_1_0*x_3_2
    x279 = x278*x_4_0
    x280 = x278*x_4_1
    x281 = x278*x_4_2
    x282 = x20*x_1_0
    x283 = x_1_0*x_3_4
    x284 = x283*x_4_0
    x285 = x283*x_4_1
    x286 = x15*x_1_0
    x287 = x_1_3*x_3_0
    x288 = x287*x_4_0
    x289 = x287*x_4_1
    x290 = x287*x_4_2
    x291 = x287*x_4_3
    x292 = x_3_4*x_4_0
    x293 = x292*x_1_3
    x294 = x_1_4*x_3_0
    x295 = x294*x_4_0
    x296 = x294*x_4_3
    x297 = x_1_4*x_4_0
    x298 = x297*x_3_1
    x299 = x297*x_3_2
    x300 = x292*x_1_4
    x301 = x268 + x269 + x270 + x272 + x274 + x275 + x276 + x277 + x279 + x280 + x281 + x282 + x284 + x285 + x286 + x288 + x289 + x290 + x291 + x293 + x295 + x296 + x298 + x299 + x300
    x302 = x265 + x266 + x301 + x74
    x303 = 3*x_1_0
    x304 = -x125*x_1_0
    x305 = -x130*x_1_0
    x306 = 2*x_1_0
    x307 = -x306*x_4_0
    x308 = -x306*x_4_1
    x309 = -x306*x_4_2
    x310 = -x306*x_4_3
    x311 = -x39*x_4_0
    x312 = x_1_0*x_2_3
    x313 = x312*x_4_0
    x314 = x312*x_4_1
    x315 = x312*x_4_2
    x316 = x312*x_4_3
    x317 = x271*x_2_4
    x318 = x94*x_4_0
    x319 = x303 + x304 + x305 + x307 + x308 + x309 + x310 + x311 + x313 + x314 + x315 + x316 + x317 + x318
    x320 = x162 + x168 + x169 + x170 + x319
    x321 = x177 + x178 + x181 + x261
    x322 = x146 + x147 + x148 + x149 + x150 + x151 + x152 + x153 + x154 + x155 + x156 + x157 + x158 + x159 + x160 + x161 + x198 + x199 + x200 + x202 + x203 + x204 + x206 + x207 + x209 + x210 + x211 + x213 + x215 + x216 + x218 + x220 + x320 + x321
    x323 = -x45*x_1_0
    x324 = -x50*x_1_0
    x325 = -x55*x_1_0
    x326 = -x60*x_1_0
    x327 = -x33*x_3_0
    x328 = x212*x_1_0
    x329 = x246*x_1_0
    x330 = x214*x_1_0
    x331 = x217*x_1_0
    x332 = x219*x_1_0
    x333 = x89*x_3_0
    x334 = x101 + x323 + x324 + x325 + x326 + x327 + x328 + x329 + x330 + x331 + x332 + x333 + x99
    x335 = x105 + x111 + x112 + x113 + x334
    x336 = x335 + x76 + x77 + x78 + x80 + x82 + x83 + x84 + x86 + x87 + x88 + x90 + x91 + x93 + x95 + x96 + x98
    x337 = x175 + x182 + x185 + x186 + x29 + x30 + x31 + x32 + x56 + x57 + x58 + x59 + x63
    x338 = x164 + x165 + x167 + x171 + x173 + x184
    x339 = x51 + x52 + x53 + x54 + x62
    x340 = x179 + x339
    x341 = x325 + x326
    x342 = -x115*x_1_0
    x343 = -x120*x_1_0
    x344 = -x104*x_2_0
    x345 = x205*x_1_0 + x23 + x236*x_1_0 + x26 + x27 + x28 + x342 + x343 + x344 + x8*x_2_0 - 4
    x346 = x24 + x34 + x345 + x41 + x42 + x43
    x347 = x341 + x346
    x348 = x227 + x229 + x249
    x349 = x166 + x35 + x36 + x37 + x38 + x44
    x350 = x279 + x280 + x299 + x73
    x351 = x_1_0*x_2_0
    x352 = x351*x_4_0
    x353 = x351*x_4_1
    x354 = x351*x_4_2
    x355 = x271*x_2_0
    x356 = x_1_0*x_2_1
    x357 = x356*x_4_0
    x358 = x356*x_4_1
    x359 = x356*x_4_2
    x360 = x271*x_2_1
    x361 = x_1_0*x_2_4
    x362 = x361*x_4_0
    x363 = x361*x_4_1
    x364 = x_1_2*x_2_0
    x365 = x364*x_4_0
    x366 = x364*x_4_1
    x367 = x364*x_4_2
    x368 = x364*x_4_3
    x369 = x79*x_4_0
    x370 = x141*x_4_0
    x371 = x141*x_4_2
    x372 = x92*x_4_0
    x373 = x97*x_4_0
    x374 = x352 + x353 + x354 + x355 + x357 + x358 + x359 + x360 + x362 + x363 + x365 + x366 + x367 + x368 + x369 + x370 + x371 + x372 + x373
    x375 = x145 + x374
    x376 = x1 + x10 + x12 + x13 + x14 + x16 + x18 + x19 + x2 + x21 + x22 + x228 + x230 + x238 + x281 + x282 + x286 + x3 + x5 + x6 + x7 + x9
    x377 = x30 + x31 + x32
    x378 = x36 + x37 + x377 + x38 + x44
    x379 = x303 + x309 + x310
    x380 = x270 + x276 + x290 + x379 + x40
    x381 = x102 + x103 + x127 + x128 + x129 + x133 + x223 + x233 + x242
    x382 = x109 + x52 + x54 + x62
    x383 = x124 + x53
    x384 = x100 + x117 + x119 + x25 + x47 + x48 + x57 + x58 + x59 + x63
    x385 = x122 + x123 + x132 + x384
    x386 = x107 + x108 + x110 + x114 + x304 + x305
    x387 = x0*x_2_0 + x135*x_3_0 + x135*x_3_2 + x197*x_1_0 + x201*x_1_0 + x208*x_1_0 + x221*x_1_0 + x226*x_1_0 + x231*x_1_0 + x240*x_1_0 + x253*x_1_0 + x4*x_2_0 + x65*x_2_0 + x75*x_3_0 + x81*x_3_0 + x85*x_3_0
    x388 = x196 + x346 + x387
    x389 = x_0_2*x_2_3
    x390 = x389*x_4_1
    x391 = x_0_3*x_2_0
    x392 = x391*x_4_1
    x393 = x_0_3*x_2_1
    x394 = x393*x_4_1
    x395 = x393*x_4_2
    x396 = x_0_3*x_2_3
    x397 = x396*x_4_1
    x398 = x_0_3*x_2_4
    x399 = x398*x_4_1
    x400 = x101 + x116 + x118 + x121 + x131 + x390 + x392 + x394 + x395 + x397 + x399
    x401 = x393*x_4_0
    x402 = x393*x_4_3
    x403 = x_0_4*x_4_3
    x404 = x403*x_2_1
    x405 = x124 + x401 + x402 + x404
    x406 = x205*x_0_3
    x407 = x253*x_0_4
    x408 = x197*x_0_4
    x409 = x201*x_0_4
    x410 = x205*x_0_4
    x411 = x208*x_0_4
    x412 = x172 + x173 + x174 + x175 + x176 + x177 + x178 + x180 + x181 + x406 + x407 + x408 + x409 + x410 + x411
    x413 = x212*x_0_2
    x414 = x246*x_0_2
    x415 = x217*x_0_2
    x416 = x219*x_0_2
    x417 = x236*x_0_3
    x418 = x212*x_0_3
    x419 = x217*x_0_3
    x420 = x219*x_0_3
    x421 = x221*x_0_4
    x422 = x231*x_0_4
    x423 = x236*x_0_4
    x424 = x240*x_0_4
    x425 = x212*x_0_4
    x426 = x246*x_0_4
    x427 = x217*x_0_4
    x428 = x219*x_0_4
    x429 = 3*x_0_2
    x430 = -x125*x_0_2
    x431 = -x45*x_0_2
    x432 = -x50*x_0_2
    x433 = -x55*x_0_2
    x434 = -x60*x_0_2
    x435 = -x115*x_0_3
    x436 = -x120*x_0_3
    x437 = -x125*x_0_3
    x438 = -x130*x_0_3
    x439 = -x55*x_0_3
    x440 = x429 + x430 + x431 + x432 + x433 + x434 + x435 + x436 + x437 + x438 + x439
    x441 = x214*x_0_2 + x214*x_0_4 + x226*x_0_4
    x442 = x413 + x414 + x415 + x416 + x417 + x418 + x419 + x420 + x421 + x422 + x423 + x424 + x425 + x426 + x427 + x428 + x440 + x441
    x443 = x389*x_4_0
    x444 = x389*x_4_2
    x445 = x389*x_4_3
    x446 = x_0_2*x_4_3
    x447 = x446*x_2_4
    x448 = x391*x_4_0
    x449 = x391*x_4_2
    x450 = x391*x_4_3
    x451 = x396*x_4_0
    x452 = x396*x_4_2
    x453 = x396*x_4_3
    x454 = x398*x_4_0
    x455 = x398*x_4_3
    x456 = x403*x_2_0
    x457 = x_0_4*x_4_2
    x458 = x457*x_2_3
    x459 = x403*x_2_3
    x460 = x403*x_2_4
    x461 = -x130*x_0_2
    x462 = 2*x_0_2
    x463 = -x462*x_4_0
    x464 = -x462*x_4_1
    x465 = -x462*x_4_2
    x466 = -x462*x_4_3
    x467 = -x115*x_0_4
    x468 = -x120*x_0_4
    x469 = -x125*x_0_4
    x470 = -x130*x_0_4
    x471 = 2*x_0_4
    x472 = -x471*x_4_2
    x473 = x29 + x461 + x463 + x464 + x465 + x466 + x467 + x468 + x469 + x470 + x472 - 4
    x474 = x443 + x444 + x445 + x447 + x448 + x449 + x450 + x451 + x452 + x453 + x454 + x455 + x456 + x458 + x459 + x460 + x473
    x475 = x_0_2*x_3_1
    x476 = x475*x_4_0
    x477 = x475*x_4_1
    x478 = x475*x_4_2
    x479 = x446*x_3_1
    x480 = x_3_4*x_4_1
    x481 = x480*x_0_2
    x482 = x457*x_3_1
    x483 = x26 + x28 + x377 + x46 + x476 + x477 + x478 + x479 + x481 + x482 + x49 + x61
    x484 = x_0_2*x_3_0
    x485 = x484*x_4_1
    x486 = x_0_2*x_3_2
    x487 = x486*x_4_1
    x488 = x_0_3*x_3_2
    x489 = x488*x_4_1
    x490 = x27 + x485 + x487 + x489 + x56
    x491 = x484*x_4_0
    x492 = x484*x_4_2
    x493 = x446*x_3_0
    x494 = x486*x_4_0
    x495 = x486*x_4_2
    x496 = x20*x_0_2
    x497 = x292*x_0_2
    x498 = x15*x_0_2
    x499 = x488*x_4_0
    x500 = x488*x_4_2
    x501 = x20*x_0_3
    x502 = x15*x_0_3
    x503 = x457*x_3_0
    x504 = x457*x_3_2
    x505 = x20*x_0_4
    x506 = x15*x_0_4
    x507 = 3*x_0_3
    x508 = 3*x_0_4
    x509 = -x60*x_0_3
    x510 = 2*x_0_3
    x511 = -x510*x_4_0
    x512 = -x510*x_4_1
    x513 = -x510*x_4_2
    x514 = -x510*x_4_3
    x515 = -x45*x_0_4
    x516 = -x50*x_0_4
    x517 = -x55*x_0_4
    x518 = -x60*x_0_4
    x519 = -x471*x_4_3
    x520 = x507 + x508 + x509 + x511 + x512 + x513 + x514 + x515 + x516 + x517 + x518 + x519
    x521 = x491 + x492 + x493 + x494 + x495 + x496 + x497 + x498 + x499 + x500 + x501 + x502 + x503 + x504 + x505 + x506 + x520
    x522 = x263 + x483 + x490 + x521
    x523 = x430 + x431 + x432 + x433 + x434 + x435 + x437 + x439 + x469
    x524 = x116 + x118 + x131 + x29 + x463 + x464 + x465 + x466 + x472 - 4
    x525 = x172 + x174 + x180 + x441
    x526 = x_0_1*x_3_0
    x527 = x526*x_4_0
    x528 = x526*x_4_1
    x529 = x526*x_4_2
    x530 = x_0_1*x_4_3
    x531 = x530*x_3_0
    x532 = x_0_1*x_3_1
    x533 = x532*x_4_0
    x534 = x532*x_4_1
    x535 = x532*x_4_2
    x536 = x530*x_3_1
    x537 = x_0_1*x_3_2
    x538 = x537*x_4_0
    x539 = x537*x_4_1
    x540 = x537*x_4_2
    x541 = x20*x_0_1
    x542 = x292*x_0_1
    x543 = x480*x_0_1
    x544 = x15*x_0_1
    x545 = x_0_3*x_3_1
    x546 = x545*x_4_0
    x547 = x545*x_4_1
    x548 = x545*x_4_2
    x549 = x545*x_4_3
    x550 = x480*x_0_3
    x551 = x_0_4*x_4_1
    x552 = x551*x_3_0
    x553 = x551*x_3_1
    x554 = x403*x_3_1
    x555 = x551*x_3_2
    x556 = x480*x_0_4
    x557 = x527 + x528 + x529 + x531 + x533 + x534 + x535 + x536 + x538 + x539 + x540 + x541 + x542 + x543 + x544 + x546 + x547 + x548 + x549 + x550 + x552 + x553 + x554 + x555 + x556
    x558 = 3*x_0_1
    x559 = -x125*x_0_1
    x560 = -x130*x_0_1
    x561 = -x45*x_0_1
    x562 = -x50*x_0_1
    x563 = -x55*x_0_1
    x564 = -x60*x_0_1
    x565 = -x50*x_0_3
    x566 = x212*x_0_1
    x567 = x246*x_0_1
    x568 = x214*x_0_1
    x569 = x217*x_0_1
    x570 = x219*x_0_1
    x571 = x214*x_0_3
    x572 = x558 + x559 + x560 + x561 + x562 + x563 + x564 + x565 + x566 + x567 + x568 + x569 + x570 + x571
    x573 = x461 + x467 + x470 + x572
    x574 = x173 + x175 + x443 + x444 + x445 + x447 + x448 + x449 + x450 + x451 + x452 + x453 + x454 + x455 + x456 + x458 + x459 + x460 + x573
    x575 = 2*x_0_1
    x576 = -x575*x_4_0
    x577 = -x575*x_4_1
    x578 = -x575*x_4_2
    x579 = -x575*x_4_3
    x580 = -x471*x_4_1
    x581 = x_0_1*x_2_3
    x582 = x581*x_4_0
    x583 = x581*x_4_1
    x584 = x581*x_4_2
    x585 = x581*x_4_3
    x586 = x530*x_2_4
    x587 = x551*x_2_3
    x588 = x429 + x576 + x577 + x578 + x579 + x580 + x582 + x583 + x584 + x585 + x586 + x587
    x589 = x390 + x392 + x397 + x438 + x588
    x590 = x413 + x414 + x415 + x416 + x417 + x418 + x419 + x420 + x421 + x422 + x423 + x424 + x425 + x426 + x427 + x428 + x589
    x591 = x558 + x563 + x564
    x592 = x431 + x433 + x434 + x439 + x463 + x464 + x465 + x466 + x472 + x485 + x487 + x489 + x591
    x593 = x47 + x48 + x511 + x512 + x513 + x514 + x519 - 4
    x594 = x101 + x436 + x559
    x595 = x183 + x27 + x430 + x435 + x437 + x461 + x467 + x470 + x594
    x596 = x28 + x46 + x49 + x538 + x539 + x555 + x61
    x597 = x_0_1*x_2_0
    x598 = x597*x_4_0
    x599 = x597*x_4_1
    x600 = x597*x_4_2
    x601 = x530*x_2_0
    x602 = x_0_1*x_2_1
    x603 = x602*x_4_0
    x604 = x602*x_4_1
    x605 = x602*x_4_2
    x606 = x530*x_2_1
    x607 = x_0_1*x_2_4
    x608 = x607*x_4_0
    x609 = x607*x_4_1
    x610 = x_0_2*x_2_1
    x611 = x610*x_4_0
    x612 = x610*x_4_1
    x613 = x610*x_4_2
    x614 = x446*x_2_1
    x615 = x_0_2*x_4_1
    x616 = x615*x_2_4
    x617 = x551*x_2_0
    x618 = x551*x_2_1
    x619 = x457*x_2_1
    x620 = x551*x_2_4
    x621 = x560 + x598 + x599 + x600 + x601 + x603 + x604 + x605 + x606 + x608 + x609 + x611 + x612 + x613 + x614 + x616 + x617 + x618 + x619 + x620
    x622 = x394 + x395 + x399 + x401 + x402 + x404 + x621
    x623 = x117 + x119
    x624 = -x115*x_0_1
    x625 = -x120*x_0_1
    x626 = -x120*x_0_2
    x627 = x100 + x205*x_0_1 + x205*x_0_2 + x236*x_0_1 + x25 + x507 + x624 + x625 + x626
    x628 = x406 + x407 + x410 + x468 + x469 + x508 + x509 + x515 + x517 + x518 + x627
    x629 = x116 + x118 + x126 + x131 + x172 + x174 + x180 + x222 + x224 + x225 + x232 + x234 + x235 + x237 + x239 + x241 + x243 + x244 + x245 + x247 + x248 + x250 + x251 + x491 + x492 + x493 + x494 + x495 + x496 + x497 + x498 + x499 + x500 + x501 + x502 + x503 + x504 + x505 + x506 + x540 + x541 + x544 + x628
    x630 = x578 + x579
    x631 = x476 + x478 + x482 + x630
    x632 = x511 + x513 + x514 + x519
    x633 = x101 + x103 + x121 + x632
    x634 = x102 + x29 + x31 + x463 + x465 + x472 - 4
    x635 = x466 + x516 + x529 + x535 + x548
    x636 = x26 + x32 + x51
    x637 = x197*x_0_1 + x197*x_0_2 + x197*x_0_3 + x201*x_0_1 + x201*x_0_2 + x201*x_0_3 + x208*x_0_1 + x208*x_0_2 + x208*x_0_3 + x221*x_0_1 + x226*x_0_1 + x226*x_0_3 + x231*x_0_1 + x240*x_0_1 + x253*x_0_1 + x253*x_0_2
    x638 = x179 + x637
    x639 = x408 + x409 + x411 + x442
    x640 = x_0_1*x_1_3
    x641 = x640*x_3_4
    x642 = x294*x_0_1
    x643 = x532*x_1_4
    x644 = x_1_4*x_3_4
    x645 = x644*x_0_1
    x646 = x283*x_0_3
    x647 = x_0_3*x_1_3
    x648 = x647*x_3_4
    x649 = x545*x_1_4
    x650 = x644*x_0_3
    x651 = x267*x_0_4
    x652 = x273*x_0_4
    x653 = x283*x_0_4
    x654 = x287*x_0_4
    x655 = x_1_3*x_3_4
    x656 = x655*x_0_4
    x657 = x294*x_0_4
    x658 = x_0_4*x_1_4
    x659 = x658*x_3_1
    x660 = x644*x_0_4
    x661 = x8*x_0_3
    x662 = x65*x_0_4
    x663 = x0*x_0_4
    x664 = x4*x_0_4
    x665 = x8*x_0_4
    x666 = x11*x_0_4
    x667 = x661 + x662 + x663 + x664 + x665 + x666
    x668 = x278*x_0_4 + x323 + x324 + x327 + x537*x_1_4 + x561 + x562 + x565 + x658*x_3_2
    x669 = x591 + x641 + x642 + x643 + x645 + x646 + x648 + x649 + x650 + x651 + x652 + x653 + x654 + x656 + x657 + x659 + x660 + x667 + x668
    x670 = x640*x_4_0
    x671 = x640*x_4_1
    x672 = x530*x_1_3
    x673 = x530*x_1_4
    x674 = x_0_3*x_1_0
    x675 = x674*x_4_0
    x676 = x674*x_4_1
    x677 = x271*x_0_3
    x678 = x647*x_4_0
    x679 = x647*x_4_1
    x680 = x647*x_4_3
    x681 = x297*x_0_3
    x682 = x_0_3*x_1_4*x_4_3
    x683 = x271*x_0_4
    x684 = x551*x_1_3
    x685 = x403*x_1_3
    x686 = x403*x_1_4
    x687 = x_0_3*x_1_2
    x688 = x687*x_4_0
    x689 = x687*x_4_1
    x690 = x687*x_4_2
    x691 = x687*x_4_3
    x692 = x17*x_0_3
    x693 = x403*x_1_2
    x694 = x688 + x689 + x690 + x691 + x692 + x693
    x695 = x640*x_4_2
    x696 = x674*x_4_2
    x697 = x647*x_4_2
    x698 = -x39*x_0_1
    x699 = -x306*x_0_4
    x700 = -x104*x_0_4
    x701 = -x33*x_0_4
    x702 = -x39*x_0_4
    x703 = x698 + x699 + x700 + x701 + x702
    x704 = -x33*x_0_1
    x705 = -x306*x_0_3
    x706 = -x104*x_0_3
    x707 = -x33*x_0_3
    x708 = -x39*x_0_3
    x709 = x704 + x705 + x706 + x707 + x708
    x710 = x307 + x308 + x311 + x576 + x577 + x580 + x695 + x696 + x697 + x703 + x709 + x99
    x711 = x379 + x630 + x670 + x671 + x672 + x673 + x675 + x676 + x677 + x678 + x679 + x680 + x681 + x682 + x683 + x684 + x685 + x686 + x694 + x710
    x712 = x341 + x557
    x713 = -x39*x_0_2
    x714 = x698 + x699 + x702 + x708 + x713
    x715 = -x33*x_0_2
    x716 = x701 + x704 + x705 + x707 + x715
    x717 = x432 + x668
    x718 = x655*x_0_2
    x719 = x294*x_0_2
    x720 = x475*x_1_4
    x721 = x486*x_1_4
    x722 = x644*x_0_2
    x723 = x488*x_1_4
    x724 = x718 + x719 + x720 + x721 + x722 + x723
    x725 = x307 + x308 + x311 + x477 + x479 + x481 + x576 + x577 + x580 + x670 + x671 + x672 + x673 + x675 + x676 + x677 + x678 + x679 + x680 + x681 + x682 + x683 + x684 + x685 + x686 + x724
    x726 = x_0_2*x_1_3
    x727 = x726*x_4_0
    x728 = x726*x_4_2
    x729 = x457*x_1_3
    x730 = x429 + x727 + x728 + x729
    x731 = x446*x_1_3 + x446*x_1_4 + x615*x_1_3
    x732 = x730 + x731
    x733 = x641 + x642 + x643 + x645 + x646 + x648 + x649 + x650 + x651 + x652 + x653 + x654 + x656 + x657 + x659 + x660 + x732
    x734 = x163 + x23 + x24 + x25 + x507 + x558
    x735 = x_0_1*x_1_2
    x736 = x735*x_4_0
    x737 = x735*x_4_1
    x738 = x735*x_4_2
    x739 = x530*x_1_2
    x740 = x17*x_0_1
    x741 = x_0_2*x_1_0
    x742 = x741*x_4_0
    x743 = x615*x_1_0
    x744 = x741*x_4_2
    x745 = x271*x_0_2
    x746 = x_0_2*x_1_2
    x747 = x746*x_4_0
    x748 = x615*x_1_2
    x749 = x746*x_4_2
    x750 = x446*x_1_2
    x751 = x297*x_0_2
    x752 = x17*x_0_2
    x753 = x457*x_1_0
    x754 = x551*x_1_2
    x755 = x457*x_1_2
    x756 = x17*x_0_4
    x757 = x694 + x736 + x737 + x738 + x739 + x740 + x742 + x743 + x744 + x745 + x747 + x748 + x749 + x750 + x751 + x752 + x753 + x754 + x755 + x756
    x758 = x464 + x710
    x759 = -x104*x_0_1
    x760 = -x306*x_0_2
    x761 = -x104*x_0_2
    x762 = x283*x_0_2 + x759 + x760 + x761 + x8*x_0_1 + x8*x_0_2
    x763 = x713 + x715 + x762
    x764 = x508 + x509 + x515 + x518 + x763
    x765 = x268 + x269 + x272 + x274 + x275 + x277 + x284 + x285 + x288 + x289 + x29 + x291 + x293 + x295 + x296 + x298 + x300 + x34 + x41 + x43 + x432 + x434 + x527 + x528 + x531 + x533 + x534 + x536 + x542 + x543 + x546 + x547 + x549 + x550 + x552 + x553 + x554 + x556 + x764
    x766 = x23 + x35 + x703 + x731 + x739 + x745 + x750
    x767 = x24 + x507 + x512
    x768 = x106 + x30 + x303 + x767
    x769 = x65*x_0_1
    x770 = x0*x_0_1
    x771 = x4*x_0_1
    x772 = x11*x_0_1
    x773 = x267*x_0_2
    x774 = x273*x_0_2
    x775 = x278*x_0_2
    x776 = x65*x_0_2
    x777 = x0*x_0_2
    x778 = x4*x_0_2
    x779 = x287*x_0_2
    x780 = x11*x_0_2
    x781 = x278*x_0_3
    x782 = x0*x_0_3
    x783 = x4*x_0_3
    x784 = x11*x_0_3
    x785 = x516 + x769 + x770 + x771 + x772 + x773 + x774 + x775 + x776 + x777 + x778 + x779 + x780 + x781 + x782 + x783 + x784
    x786 = x40 + x709
    x787 = x266 + x429 + x517 + x669 + x785 + x786 + x99
    x788 = x42 + x431 + x433 + x439 - 4
    x789 = x378 + x621 + x736 + x737 + x738 + x740 + x742 + x743 + x744 + x747 + x748 + x749 + x751 + x752 + x753 + x754 + x755 + x756
    x790 = x94*x_0_1
    x791 = x312*x_0_4
    x792 = x94*x_0_4
    x793 = x167 + x790 + x791 + x792
    x794 = x79*x_0_1
    x795 = x141*x_0_1
    x796 = x92*x_0_1
    x797 = x97*x_0_1
    x798 = x361*x_0_2
    x799 = x79*x_0_2
    x800 = x92*x_0_2
    x801 = x97*x_0_2
    x802 = x351*x_0_4
    x803 = x356*x_0_4
    x804 = x361*x_0_4
    x805 = x364*x_0_4
    x806 = x79*x_0_4
    x807 = x141*x_0_4
    x808 = x92*x_0_4
    x809 = x97*x_0_4
    x810 = x342 + x343 + x344 + x508 + x558 + x559 + x624 + x625 + x626 + x759 + x760 + x761 + x794 + x795 + x796 + x797 + x798 + x799 + x800 + x801 + x802 + x803 + x804 + x805 + x806 + x807 + x808 + x809
    x811 = x89*x_0_2
    x812 = x75*x_0_4
    x813 = x135*x_0_4
    x814 = x81*x_0_4
    x815 = x85*x_0_4
    x816 = x89*x_0_4
    x817 = x811 + x812 + x813 + x814 + x815 + x816
    x818 = x713 + x715 + x817
    x819 = x793 + x810 + x818
    x820 = x700 + x706
    x821 = x79*x_0_3
    x822 = x92*x_0_3
    x823 = x97*x_0_3
    x824 = x374 + x436 + x767 + x821 + x822 + x823
    x825 = x141*x_0_3 + x94*x_0_2 + x94*x_0_3
    x826 = x790 + x791 + x792 + x825
    x827 = x430 + x435 + x437
    x828 = x100 + x105 + x111 + x113 + x122 + x123 + x132 + x170 + x23 + x35 + x438 + x461 + x467 + x470
    x829 = x110 + x468
    x830 = x89*x_0_1
    x831 = x361*x_0_3
    x832 = x89*x_0_3
    x833 = x305 + x830 + x831 + x832
    x834 = x342 + x343 + x344 + x508 + x624 + x625 + x626 + x759 + x760 + x761 + x794 + x795 + x796 + x797 + x798 + x799 + x800 + x801 + x802 + x803 + x804 + x805 + x806 + x807 + x808 + x809 + x829 + x833
    x835 = x75*x_0_1
    x836 = x135*x_0_1
    x837 = x81*x_0_1
    x838 = x85*x_0_1
    x839 = x312*x_0_2
    x840 = x75*x_0_2
    x841 = x81*x_0_2
    x842 = x85*x_0_2
    x843 = x351*x_0_3
    x844 = x356*x_0_3
    x845 = x312*x_0_3
    x846 = x364*x_0_3
    x847 = x75*x_0_3
    x848 = x135*x_0_3
    x849 = x81*x_0_3
    x850 = x85*x_0_3
    x851 = x103 + x835 + x836 + x837 + x838 + x839 + x840 + x841 + x842 + x843 + x844 + x845 + x846 + x847 + x848 + x849 + x850
    x852 = x821 + x822 + x823 + x825 + x851
    x853 = x112 + x162 + x168 + x169
    x854 = x469 + x560 + x853
    x855 = x102 + x303 + x304 + x637 + x833
    x856 = x627 + x724
    x857 = x387 + x785 + x851
    x858 = x102 + x303 + x304 + x703
    # Final Gradient Calculation
    gradient = [
        x145 + x196 + x262 + x74,
        x144 + x195 + x263 + x264 + x302 + x322 + x336,
        x188 + x190 + x192 + x322 + x328 + x331 + x332 + x337 + x338 + x340 + x347 + x348 + x349 + x350 + x375 + x376,
        x137 + x139 + x142 + x198 + x199 + x200 + x202 + x203 + x204 + x206 + x207 + x209 + x210 + x211 + x213 + x215 + x216 + x218 + x220 + x255 + x256 + x259 + x315 + x316 + x317 + x336 + x355 + x360 + x368 + x376 + x378 + x380 + x381 + x382 + x383 + x385 + x386 + x388 + x67 + x68 + x71,
        x262 + x340 + x385 + x400 + x405 + x412 + x442 + x474 + x522,
        x252 + x339 + x384 + x522 + x523 + x524 + x525 + x557 + x574 + x590,
        x264 + x337 + x381 + x443 + x444 + x445 + x447 + x448 + x449 + x450 + x451 + x452 + x453 + x454 + x455 + x456 + x458 + x459 + x460 + x566 + x569 + x570 + x590 + x592 + x593 + x595 + x596 + x622 + x623 + x629,
        x119 + x128 + x129 + x133 + x176 + x182 + x183 + x184 + x185 + x186 + x254 + x257 + x258 + x27 + x28 + x321 + x348 + x383 + x401 + x402 + x404 + x46 + x48 + x49 + x56 + x574 + x58 + x584 + x585 + x586 + x59 + x601 + x606 + x61 + x614 + x629 + x63 + x631 + x633 + x634 + x635 + x636 + x638 + x639,
        x302 + x520 + x669 + x711 + x712,
        x301 + x379 + x521 + x592 + x631 + x64 + x695 + x696 + x697 + x712 + x714 + x716 + x717 + x725 + x733,
        x265 + x323 + x324 + x326 + x327 + x339 + x349 + x380 + x463 + x465 + x472 + x483 + x561 + x562 + x564 + x565 + x593 + x630 + x635 + x661 + x662 + x665 + x670 + x671 + x672 + x673 + x675 + x676 + x677 + x678 + x679 + x680 + x681 + x682 + x683 + x684 + x685 + x686 + x718 + x72 + x720 + x722 + x733 + x734 + x757 + x758 + x765,
        x25 + x310 + x341 + x350 + x36 + x38 + x382 + x44 + x464 + x466 + x47 + x490 + x511 + x514 + x519 + x57 + x579 + x596 + x636 + x66 + x688 + x69 + x691 + x693 + x70 + x725 + x765 + x766 + x768 + x787 + x788,
        x24 + x320 + x375 + x473 + x588 + x727 + x728 + x729 + x766 + x789 + x819,
        x134 + x319 + x377 + x474 + x589 + x622 + x632 + x714 + x757 + x810 + x820 + x824 + x826 + x827,
        x143 + x167 + x265 + x394 + x395 + x399 + x405 + x524 + x558 + x623 + x633 + x711 + x713 + x715 + x732 + x739 + x745 + x750 + x789 + x811 + x813 + x816 + x824 + x828 + x834,
        x117 + x126 + x127 + x136 + x138 + x140 + x144 + x309 + x313 + x314 + x318 + x352 + x353 + x354 + x357 + x358 + x359 + x362 + x363 + x365 + x366 + x367 + x369 + x37 + x370 + x371 + x372 + x373 + x386 + x400 + x436 + x468 + x513 + x578 + x582 + x583 + x587 + x598 + x599 + x600 + x603 + x604 + x605 + x608 + x609 + x611 + x612 + x613 + x616 + x617 + x618 + x619 + x620 + x634 + x689 + x690 + x692 + x730 + x736 + x737 + x738 + x740 + x742 + x743 + x744 + x747 + x748 + x749 + x751 + x752 + x753 + x754 + x755 + x756 + x758 + x768 + x819 + x827 + x828 + x830 + x831 + x832 + x852 + x854,
        x110 + x335 + x388 + x440 + x572 + x763 + x769 + x770 + x771 + x772 + x773 + x774 + x775 + x776 + x777 + x778 + x779 + x780 + x781 + x782 + x783 + x784 + x786 + x852 + x855 + x856,
        x187 + x334 + x345 + x573 + x628 + x639 + x667 + x716 + x762 + x817 + x820 + x855 + x857,
        x194 + x347 + x387 + x412 + x523 + x594 + x638 + x764 + x787 + x793 + x812 + x814 + x815 + x825 + x829 + x835 + x836 + x837 + x838 + x839 + x840 + x841 + x842 + x843 + x844 + x845 + x846 + x847 + x848 + x849 + x850 + x853 + x856 + x858,
        x100 + x105 + x111 + x113 + x170 + x176 + x177 + x178 + x181 + x189 + x191 + x193 + x195 + x26 + x325 + x329 + x330 + x333 + x338 + x408 + x409 + x411 + x429 + x438 + x517 + x525 + x563 + x567 + x568 + x571 + x595 + x637 + x663 + x664 + x666 + x717 + x719 + x721 + x723 + x734 + x786 + x788 + x818 + x821 + x822 + x823 + x826 + x834 + x854 + x857 + x858 + x99
    ]
    return gradient


